# generated with kubectl cluster-info dump 

{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/nodes",
        "resourceVersion": "117394"
    },
    "items": [
        {
            "metadata": {
                "name": "localhost",
                "selfLink": "/api/v1/nodes/localhost",
                "uid": "08021b3a-5244-49bc-9eef-ce3d2538297b",
                "resourceVersion": "117302",
                "creationTimestamp": "2020-10-09T18:21:09Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "k3s",
                    "beta.kubernetes.io/os": "linux",
                    "k3s.io/hostname": "localhost",
                    "k3s.io/internal-ip": "10.0.2.15",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "localhost",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/master": "true",
                    "node.kubernetes.io/instance-type": "k3s"
                },
                "annotations": {
                    "flannel.alpha.coreos.com/backend-data": "{\"VtepMAC\":\"ea:36:aa:37:ad:0b\"}",
                    "flannel.alpha.coreos.com/backend-type": "vxlan",
                    "flannel.alpha.coreos.com/kube-subnet-manager": "true",
                    "flannel.alpha.coreos.com/public-ip": "10.0.2.15",
                    "k3s.io/node-args": "[\"server\"]",
                    "k3s.io/node-config-hash": "24VCQ42HQERKARRJMQ2IFIHPXSSOAEK5WXK2QECS3AWGCSCUBNGA====",
                    "k3s.io/node-env": "{\"K3S_DATA_DIR\":\"/var/lib/rancher/k3s/data/688c8ca42a6cd0c042322efea271d6f3849d3de17c850739b0da2461f6c69ee8\"}",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                },
                "finalizers": [
                    "wrangler.cattle.io/node"
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T08:51:20Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:flannel.alpha.coreos.com/backend-data": {},
                                    "f:flannel.alpha.coreos.com/backend-type": {},
                                    "f:flannel.alpha.coreos.com/kube-subnet-manager": {},
                                    "f:flannel.alpha.coreos.com/public-ip": {},
                                    "f:k3s.io/node-args": {},
                                    "f:k3s.io/node-config-hash": {},
                                    "f:k3s.io/node-env": {},
                                    "f:node.alpha.kubernetes.io/ttl": {},
                                    "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                                },
                                "f:finalizers": {
                                    ".": {},
                                    "v:\"wrangler.cattle.io/node\"": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:beta.kubernetes.io/arch": {},
                                    "f:beta.kubernetes.io/instance-type": {},
                                    "f:beta.kubernetes.io/os": {},
                                    "f:k3s.io/hostname": {},
                                    "f:k3s.io/internal-ip": {},
                                    "f:kubernetes.io/arch": {},
                                    "f:kubernetes.io/hostname": {},
                                    "f:kubernetes.io/os": {},
                                    "f:node-role.kubernetes.io/master": {},
                                    "f:node.kubernetes.io/instance-type": {}
                                }
                            },
                            "f:spec": {
                                "f:podCIDR": {},
                                "f:podCIDRs": {
                                    ".": {},
                                    "v:\"10.42.0.0/24\"": {}
                                },
                                "f:providerID": {}
                            },
                            "f:status": {
                                "f:addresses": {
                                    ".": {},
                                    "k:{\"type\":\"Hostname\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"InternalIP\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    }
                                },
                                "f:allocatable": {
                                    ".": {},
                                    "f:cpu": {},
                                    "f:ephemeral-storage": {},
                                    "f:hugepages-2Mi": {},
                                    "f:memory": {},
                                    "f:pods": {}
                                },
                                "f:capacity": {
                                    ".": {},
                                    "f:cpu": {},
                                    "f:ephemeral-storage": {},
                                    "f:hugepages-2Mi": {},
                                    "f:memory": {},
                                    "f:pods": {}
                                },
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"DiskPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"MemoryPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"NetworkUnavailable\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"PIDPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:daemonEndpoints": {
                                    "f:kubeletEndpoint": {
                                        "f:Port": {}
                                    }
                                },
                                "f:images": {},
                                "f:nodeInfo": {
                                    "f:architecture": {},
                                    "f:bootID": {},
                                    "f:containerRuntimeVersion": {},
                                    "f:kernelVersion": {},
                                    "f:kubeProxyVersion": {},
                                    "f:kubeletVersion": {},
                                    "f:machineID": {},
                                    "f:operatingSystem": {},
                                    "f:osImage": {},
                                    "f:systemUUID": {}
                                }
                            }
                        }
                    }
                ]
            },
            "spec": {
                "podCIDR": "10.42.0.0/24",
                "podCIDRs": [
                    "10.42.0.0/24"
                ],
                "providerID": "k3s://localhost"
            },
            "status": {
                "capacity": {
                    "cpu": "1",
                    "ephemeral-storage": "43085872Ki",
                    "hugepages-2Mi": "0",
                    "memory": "8145408Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "1",
                    "ephemeral-storage": "41913936249",
                    "hugepages-2Mi": "0",
                    "memory": "8145408Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "NetworkUnavailable",
                        "status": "False",
                        "lastHeartbeatTime": "2020-10-13T07:39:43Z",
                        "lastTransitionTime": "2020-10-13T07:39:43Z",
                        "reason": "FlannelIsUp",
                        "message": "Flannel is running on this node"
                    },
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2020-10-13T08:51:20Z",
                        "lastTransitionTime": "2020-10-12T14:52:20Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2020-10-13T08:51:20Z",
                        "lastTransitionTime": "2020-10-12T14:52:20Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2020-10-13T08:51:20Z",
                        "lastTransitionTime": "2020-10-12T14:52:20Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2020-10-13T08:51:20Z",
                        "lastTransitionTime": "2020-10-13T07:39:50Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.0.2.15"
                    },
                    {
                        "type": "Hostname",
                        "address": "localhost"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ba3bcae810de4913b521ac3d1999a21f",
                    "systemUUID": "feb52a80-e540-e941-8d4e-e72e3d1c146a",
                    "bootID": "87107f13-a0a7-4248-8b9f-11246265f586",
                    "kernelVersion": "5.3.18-lp152.44-default",
                    "osImage": "openSUSE Leap 15.2",
                    "containerRuntimeVersion": "containerd://1.3.3-k3s2",
                    "kubeletVersion": "v1.18.9+k3s1",
                    "kubeProxyVersion": "v1.18.9+k3s1",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "docker.elastic.co/elasticsearch/elasticsearch@sha256:0a5308431aee029636858a6efe07e409fa699b02549a78d7904eb931b8c46920",
                            "docker.elastic.co/elasticsearch/elasticsearch:7.9.1"
                        ],
                        "sizeBytes": 440089813
                    },
                    {
                        "names": [
                            "ghcr.io/thejaysmith/helloflask@sha256:85f36f806e47114c797b13b028cc63d9ffe68f95a3f42601420eae6fdd1adf07",
                            "ghcr.io/thejaysmith/helloflask:v1"
                        ],
                        "sizeBytes": 340799574
                    },
                    {
                        "names": [
                            "docker.io/istio/proxyv2@sha256:6169d096fe60f128f1311f76c97ee1c3e5d760a45042d5c9182492745d34c658",
                            "docker.io/istio/proxyv2:1.7.3"
                        ],
                        "sizeBytes": 120747483
                    },
                    {
                        "names": [
                            "docker.io/istio/pilot@sha256:ba83d2a63ef324eb14128d0804aea5d1170b43ca532823dd186a516d354be610",
                            "docker.io/istio/pilot:1.7.3"
                        ],
                        "sizeBytes": 100496088
                    },
                    {
                        "names": [
                            "docker.io/jaegertracing/jaeger-operator@sha256:2d2c9a325a2e40400821e92de0abe826f86174208ae7d3357eba7fb692139c98",
                            "docker.io/jaegertracing/jaeger-operator:1.20.0"
                        ],
                        "sizeBytes": 99712692
                    },
                    {
                        "names": [
                            "ghcr.io/thejaysmith/myfrontend@sha256:320d0b8bb7968ad394b583738698a013bbc719ac7e004ae6dd18237fe0a05474",
                            "ghcr.io/thejaysmith/myfrontend:v1"
                        ],
                        "sizeBytes": 65234690
                    },
                    {
                        "names": [
                            "quay.io/prometheus/prometheus@sha256:4d3303d1eb424e345cf48969bb7575d4d58472ad783ac41ea07fba92686f7ef5",
                            "quay.io/prometheus/prometheus:v2.18.2"
                        ],
                        "sizeBytes": 57587135
                    },
                    {
                        "names": [
                            "docker.io/grafana/grafana@sha256:d72946c8e5d57a9a121bcc3ae8e4a8ccab96960d81031d18a4c31ad1f7aea03e",
                            "docker.io/grafana/grafana:7.0.3"
                        ],
                        "sizeBytes": 56117040
                    },
                    {
                        "names": [
                            "docker.io/rancher/klipper-helm@sha256:70c671e0b5bf5a9dffb90dabf59ee83fbcb27971d2e69f43a1c4021234d179a1",
                            "docker.io/rancher/klipper-helm:v0.2.7"
                        ],
                        "sizeBytes": 49992957
                    },
                    {
                        "names": [
                            "docker.io/kiwigrid/k8s-sidecar@sha256:7b98eecdf6d117b053622e9f317c632a4b2b97636e8b2e96b311a5fd5c68d211",
                            "docker.io/kiwigrid/k8s-sidecar:0.1.151"
                        ],
                        "sizeBytes": 43166130
                    },
                    {
                        "names": [
                            "quay.io/prometheus/alertmanager@sha256:24a5204b418e8fa0214cfb628486749003b039c279c56b5bddb5b10cd100d926",
                            "quay.io/prometheus/alertmanager:v0.21.0"
                        ],
                        "sizeBytes": 27097956
                    },
                    {
                        "names": [
                            "docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d",
                            "docker.io/rancher/library-traefik:1.7.19"
                        ],
                        "sizeBytes": 24011762
                    },
                    {
                        "names": [
                            "docker.elastic.co/eck/eck-operator@sha256:e4b52858b3a917b9a2dbf977aceb9fba125d36c6b33e41380070783cc323044b",
                            "docker.elastic.co/eck/eck-operator:1.2.1"
                        ],
                        "sizeBytes": 23608294
                    },
                    {
                        "names": [
                            "docker.io/jaegertracing/all-in-one@sha256:54c2ea315dab7215c51c1b06b111c666f594e90317584f84eabbc59aa5856b13",
                            "docker.io/jaegertracing/all-in-one:1.20.0"
                        ],
                        "sizeBytes": 22567836
                    },
                    {
                        "names": [
                            "docker.io/jettech/kube-webhook-certgen@sha256:c42098c8d8553da203175a68a12fa91bd5a73d6c43736e9f339348404a263632",
                            "docker.io/jettech/kube-webhook-certgen:v1.2.1"
                        ],
                        "sizeBytes": 21486540
                    },
                    {
                        "names": [
                            "docker.io/squareup/ghostunnel@sha256:70f4cf270425dee074f49626ec63fc96e6712e9c0eedf127e7254e8132d25063",
                            "docker.io/squareup/ghostunnel:v1.5.2"
                        ],
                        "sizeBytes": 13534919
                    },
                    {
                        "names": [
                            "docker.io/rancher/coredns-coredns@sha256:e70c936deab8efed89db66f04847fec137dbb81d5b456e8068b6e71cb770f6c0",
                            "docker.io/rancher/coredns-coredns:1.6.9"
                        ],
                        "sizeBytes": 13403638
                    },
                    {
                        "names": [
                            "quay.io/prometheus/node-exporter@sha256:8a3a33cad0bd33650ba7287a7ec94327d8e47ddf7845c569c80b5c4b20d49d36",
                            "quay.io/prometheus/node-exporter:v1.0.0"
                        ],
                        "sizeBytes": 12913616
                    },
                    {
                        "names": [
                            "docker.io/rancher/local-path-provisioner@sha256:0d60b97b101e432606035ab955c623604493e8956484af1cfa207753329bdf81",
                            "docker.io/rancher/local-path-provisioner:v0.0.11"
                        ],
                        "sizeBytes": 11999785
                    },
                    {
                        "names": [
                            "quay.io/coreos/prometheus-operator@sha256:62b8cf466e9b238a9fcf0bcba74562c8833e7451042321e323a46de3f1dbe1bc",
                            "quay.io/coreos/prometheus-operator:v0.38.1"
                        ],
                        "sizeBytes": 11334310
                    },
                    {
                        "names": [
                            "docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e",
                            "docker.io/rancher/metrics-server:v0.3.6"
                        ],
                        "sizeBytes": 10543877
                    },
                    {
                        "names": [
                            "quay.io/coreos/kube-state-metrics@sha256:2f82f0da199c60a7699c43c63a295c44e673242de0b7ee1b17c2d5a23bec34cb",
                            "quay.io/coreos/kube-state-metrics:v1.9.7"
                        ],
                        "sizeBytes": 10302292
                    },
                    {
                        "names": [
                            "quay.io/coreos/prometheus-config-reloader@sha256:d1cce64093d4a850d28726ec3e48403124808f76567b5bd7b26e4416300996a7",
                            "quay.io/coreos/prometheus-config-reloader:v0.38.1"
                        ],
                        "sizeBytes": 4247416
                    },
                    {
                        "names": [
                            "docker.io/jimmidyson/configmap-reload@sha256:d107c7a235c266273b1c3502a391fec374430e5625539403d0de797fa9c556a2",
                            "docker.io/jimmidyson/configmap-reload:v0.3.0"
                        ],
                        "sizeBytes": 4063371
                    },
                    {
                        "names": [
                            "docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a",
                            "docker.io/rancher/klipper-lb:v0.1.2"
                        ],
                        "sizeBytes": 2708293
                    },
                    {
                        "names": [
                            "docker.io/library/busybox@sha256:d366a4665ab44f0648d7a00ae3fae139d55e32f9712c67accd604bb55df9d05a",
                            "docker.io/library/busybox:latest"
                        ],
                        "sizeBytes": 768718
                    },
                    {
                        "names": [
                            "docker.io/rancher/pause@sha256:d22591b61e9c2b52aecbf07106d5db313c4f178e404d660b32517b18fcbf0144",
                            "docker.io/rancher/pause:3.1"
                        ],
                        "sizeBytes": 326597
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/events",
        "resourceVersion": "117394"
    },
    "items": [
        {
            "metadata": {
                "name": "traefik-758cd5fc85-bdpnd.163d7df35b0a354e",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/traefik-758cd5fc85-bdpnd.163d7df35b0a354e",
                "uid": "e9c93c8d-ec6d-41d0-8a87-f770ee72c806",
                "resourceVersion": "115515",
                "creationTimestamp": "2020-10-13T07:52:06Z",
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T08:24:36Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:count": {},
                            "f:firstTimestamp": {},
                            "f:involvedObject": {
                                "f:apiVersion": {},
                                "f:fieldPath": {},
                                "f:kind": {},
                                "f:name": {},
                                "f:namespace": {},
                                "f:resourceVersion": {},
                                "f:uid": {}
                            },
                            "f:lastTimestamp": {},
                            "f:message": {},
                            "f:reason": {},
                            "f:source": {
                                "f:component": {},
                                "f:host": {}
                            },
                            "f:type": {}
                        }
                    }
                ]
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "traefik-758cd5fc85-bdpnd",
                "uid": "3dd1343f-a5b3-4d97-8d8b-c4b29f2405cb",
                "apiVersion": "v1",
                "resourceVersion": "112615",
                "fieldPath": "spec.containers{traefik}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: Get http://10.42.0.101:80/ping: net/http: request canceled (Client.Timeout exceeded while awaiting headers)",
            "source": {
                "component": "kubelet",
                "host": "localhost"
            },
            "firstTimestamp": "2020-10-13T07:52:06Z",
            "lastTimestamp": "2020-10-13T08:24:36Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "svclb-traefik-wvrxc.163d7d53762633f0",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/svclb-traefik-wvrxc.163d7d53762633f0",
                "uid": "8addc5d4-45b7-46b7-a979-f7ced88e2657",
                "resourceVersion": "116482",
                "creationTimestamp": "2020-10-13T07:40:39Z",
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "events.k8s.io/v1beta1",
                        "time": "2020-10-13T08:39:24Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:action": {},
                            "f:deprecatedSource": {
                                "f:component": {}
                            },
                            "f:eventTime": {},
                            "f:note": {},
                            "f:reason": {},
                            "f:regarding": {
                                "f:apiVersion": {},
                                "f:kind": {},
                                "f:name": {},
                                "f:namespace": {},
                                "f:resourceVersion": {},
                                "f:uid": {}
                            },
                            "f:reportingController": {},
                            "f:reportingInstance": {},
                            "f:series": {
                                ".": {},
                                "f:count": {},
                                "f:lastObservedTime": {},
                                "f:state": {}
                            },
                            "f:type": {}
                        }
                    }
                ]
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "svclb-traefik-wvrxc",
                "uid": "1ed64a7c-4b0c-4ddb-8c45-da45f410edb9",
                "apiVersion": "v1",
                "resourceVersion": "112611"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) didn't have free ports for the requested pod ports.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2020-10-13T07:40:39.831727Z",
            "series": {
                "count": 40,
                "lastObservedTime": "2020-10-13T08:38:55.674399Z"
            },
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-localhost"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/replicationcontrollers",
        "resourceVersion": "117394"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/services",
        "resourceVersion": "117394"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                "uid": "63e977b4-b8ce-40bb-84eb-fc96a6d08fa7",
                "resourceVersion": "199",
                "creationTimestamp": "2020-10-09T18:21:07Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS",
                    "objectset.rio.cattle.io/hash": "bce283298811743a0386ab510f2f67ef74240c57"
                },
                "annotations": {
                    "objectset.rio.cattle.io/applied": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"objectset.rio.cattle.io/id\":\"\",\"objectset.rio.cattle.io/owner-gvk\":\"k3s.cattle.io/v1, Kind=Addon\",\"objectset.rio.cattle.io/owner-name\":\"coredns\",\"objectset.rio.cattle.io/owner-namespace\":\"kube-system\",\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\",\"objectset.rio.cattle.io/hash\":\"bce283298811743a0386ab510f2f67ef74240c57\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.43.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"},{\"name\":\"metrics\",\"port\":9153,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}",
                    "objectset.rio.cattle.io/id": "",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "coredns",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                },
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T18:21:07Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/id": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {},
                                    "f:prometheus.io/port": {},
                                    "f:prometheus.io/scrape": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {},
                                    "f:kubernetes.io/cluster-service": {},
                                    "f:kubernetes.io/name": {},
                                    "f:objectset.rio.cattle.io/hash": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":53,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":53,\"protocol\":\"UDP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":9153,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:k8s-app": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.43.0.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/metrics-server",
                "uid": "c1412dfc-3c59-4c51-8248-680d3b3acd7a",
                "resourceVersion": "226",
                "creationTimestamp": "2020-10-09T18:21:09Z",
                "labels": {
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "Metrics-server",
                    "objectset.rio.cattle.io/hash": "a5d3bc601c871e123fa32b27f549b6ea770bcf4a"
                },
                "annotations": {
                    "objectset.rio.cattle.io/applied": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"objectset.rio.cattle.io/id\":\"\",\"objectset.rio.cattle.io/owner-gvk\":\"k3s.cattle.io/v1, Kind=Addon\",\"objectset.rio.cattle.io/owner-name\":\"metrics-server-service\",\"objectset.rio.cattle.io/owner-namespace\":\"kube-system\"},\"labels\":{\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Metrics-server\",\"objectset.rio.cattle.io/hash\":\"a5d3bc601c871e123fa32b27f549b6ea770bcf4a\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"protocol\":\"TCP\",\"targetPort\":443}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}",
                    "objectset.rio.cattle.io/id": "",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "metrics-server-service",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T18:21:09Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/id": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/cluster-service": {},
                                    "f:kubernetes.io/name": {},
                                    "f:objectset.rio.cattle.io/hash": {}
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:k8s-app": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "selector": {
                    "k8s-app": "metrics-server"
                },
                "clusterIP": "10.43.149.80",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-prometheus-oper-coredns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-prometheus-oper-coredns",
                "uid": "3161e350-abf5-49c5-9065-ca5613c37d5d",
                "resourceVersion": "3467",
                "creationTimestamp": "2020-10-09T19:30:16Z",
                "labels": {
                    "app": "prometheus-operator-coredns",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "prometheus-operator-9.3.2",
                    "heritage": "Helm",
                    "jobLabel": "coredns",
                    "release": "prometheus"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "prometheus",
                    "meta.helm.sh/release-namespace": "monitoring"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:30:16Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:jobLabel": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":9153,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:k8s-app": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-prometheus-oper-kube-scheduler",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-prometheus-oper-kube-scheduler",
                "uid": "b6954808-288b-466e-b1fb-12bf465fa388",
                "resourceVersion": "3468",
                "creationTimestamp": "2020-10-09T19:30:16Z",
                "labels": {
                    "app": "prometheus-operator-kube-scheduler",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "prometheus-operator-9.3.2",
                    "heritage": "Helm",
                    "jobLabel": "kube-scheduler",
                    "release": "prometheus"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "prometheus",
                    "meta.helm.sh/release-namespace": "monitoring"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:30:16Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:jobLabel": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":10251,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:component": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 10251,
                        "targetPort": 10251
                    }
                ],
                "selector": {
                    "component": "kube-scheduler"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-prometheus-oper-kube-proxy",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-prometheus-oper-kube-proxy",
                "uid": "f6714217-b3b6-44a1-975b-d32904f24eb6",
                "resourceVersion": "3469",
                "creationTimestamp": "2020-10-09T19:30:16Z",
                "labels": {
                    "app": "prometheus-operator-kube-proxy",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "prometheus-operator-9.3.2",
                    "heritage": "Helm",
                    "jobLabel": "kube-proxy",
                    "release": "prometheus"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "prometheus",
                    "meta.helm.sh/release-namespace": "monitoring"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:30:16Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:jobLabel": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":10249,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:k8s-app": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 10249,
                        "targetPort": 10249
                    }
                ],
                "selector": {
                    "k8s-app": "kube-proxy"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-prometheus-oper-kube-etcd",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-prometheus-oper-kube-etcd",
                "uid": "e83e0248-cd86-4fb1-892a-bdcd942a2f70",
                "resourceVersion": "3470",
                "creationTimestamp": "2020-10-09T19:30:16Z",
                "labels": {
                    "app": "prometheus-operator-kube-etcd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "prometheus-operator-9.3.2",
                    "heritage": "Helm",
                    "jobLabel": "kube-etcd",
                    "release": "prometheus"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "prometheus",
                    "meta.helm.sh/release-namespace": "monitoring"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:30:16Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:jobLabel": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":2379,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:component": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 2379,
                        "targetPort": 2379
                    }
                ],
                "selector": {
                    "component": "etcd"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-prometheus-oper-kube-controller-manager",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-prometheus-oper-kube-controller-manager",
                "uid": "088e2305-0715-453c-8191-39a25090c0e3",
                "resourceVersion": "3471",
                "creationTimestamp": "2020-10-09T19:30:16Z",
                "labels": {
                    "app": "prometheus-operator-kube-controller-manager",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "prometheus-operator-9.3.2",
                    "heritage": "Helm",
                    "jobLabel": "kube-controller-manager",
                    "release": "prometheus"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "prometheus",
                    "meta.helm.sh/release-namespace": "monitoring"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:30:16Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:jobLabel": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":10252,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:component": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 10252,
                        "targetPort": 10252
                    }
                ],
                "selector": {
                    "component": "kube-controller-manager"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "prometheus-prometheus-oper-kubelet",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/prometheus-prometheus-oper-kubelet",
                "uid": "761839a4-fee6-4f53-bb5a-a80c50e39ba2",
                "resourceVersion": "3742",
                "creationTimestamp": "2020-10-09T19:31:01Z",
                "labels": {
                    "k8s-app": "kubelet"
                },
                "managedFields": [
                    {
                        "manager": "operator",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:31:01Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":4194,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":10250,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":10255,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "https-metrics",
                        "protocol": "TCP",
                        "port": 10250,
                        "targetPort": 10250
                    },
                    {
                        "name": "http-metrics",
                        "protocol": "TCP",
                        "port": 10255,
                        "targetPort": 10255
                    },
                    {
                        "name": "cadvisor",
                        "protocol": "TCP",
                        "port": 4194,
                        "targetPort": 4194
                    }
                ],
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "traefik-prometheus",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/traefik-prometheus",
                "uid": "015ff6cc-959b-47dc-93fa-6cb695e3fe1f",
                "resourceVersion": "112586",
                "creationTimestamp": "2020-10-13T07:40:37Z",
                "labels": {
                    "app": "traefik",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "traefik-1.81.0",
                    "heritage": "Helm",
                    "release": "traefik"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "traefik",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T07:40:37Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":9100,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:app": {},
                                    "f:release": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9100,
                        "targetPort": "metrics"
                    }
                ],
                "selector": {
                    "app": "traefik",
                    "release": "traefik"
                },
                "clusterIP": "10.43.166.232",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "traefik",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/traefik",
                "uid": "4062b29e-c545-4423-bc07-c98f201e904f",
                "resourceVersion": "112592",
                "creationTimestamp": "2020-10-13T07:40:37Z",
                "labels": {
                    "app": "traefik",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "traefik-1.81.0",
                    "heritage": "Helm",
                    "release": "traefik"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "traefik",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T07:40:37Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:externalTrafficPolicy": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:app": {},
                                    "f:release": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": "http",
                        "nodePort": 30290
                    },
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": "https",
                        "nodePort": 31956
                    }
                ],
                "selector": {
                    "app": "traefik",
                    "release": "traefik"
                },
                "clusterIP": "10.43.230.78",
                "type": "LoadBalancer",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets",
        "resourceVersion": "117394"
    },
    "items": [
        {
            "metadata": {
                "name": "svclb-traefik",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/svclb-traefik",
                "uid": "ea8f2800-db0f-4d5d-840a-1317f53eaa97",
                "resourceVersion": "112677",
                "generation": 1,
                "creationTimestamp": "2020-10-13T07:40:37Z",
                "labels": {
                    "objectset.rio.cattle.io/hash": "f31475152fbf70655d3c016d368e90118938f6ea",
                    "svccontroller.k3s.cattle.io/nodeselector": "false"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "objectset.rio.cattle.io/applied": "H4sIAAAAAAAA/8xUQW/jNhP9Kx/mTCmSJTu2gO+wSHII2nUM29tLYAQUNYpZU6RAjtQYhv57QTpZO5tkU7Q99OjhzPOb90bvADupKyjgmmNj9AoJGPBW/obWSaOhAN627qJPgUGDxCtOHIoDaN4gFOB6ocqILMda7oCFsmu58G+7rsTI7R1hAwyERU7S6LVs0BFvWih0pxQDxUtUzmOa8ncU5JBiK00sOJHCWJqLLXdbKKDO0vxynI5HdVlfJpPxuMpEkk6qbDLFWZKm01k2rSfIgXlawmiyRim08S5zZ2jaVOhQoSBjPSpXDmFgwLU2FCj+lIysjmuf8IF92Gz+0Gijx34HBVz0KfvfL1JX/1+h7aXAT+eeNT6p+3n7e9oPDELDEmu0qAU6KO4Pr00O/j5fwoneGwJd2D5PJqNyNMNIjPNxlOejLCpFchmJ2bQeJSnOkrz2jp8UKsh2OGwGBq5F4eU9OXCAhpPY/vr9DHjbvrmsYWBA2LSKE4aRs1P8C5f1HuTPr8T14ofthzP2foxLjfYo5XOnKqPWWIqmCTCQDX/0Rcu12KK92CnZtmgjVRZ9EqfxCBj47o8RtsbRwliCYpqw01+eSq01ZIRRUMD6agHDhgHq/hxvtbx6WNwt18Cg56rzpWkCA/vecH2zWj8slnfru7OWAPZjz6cot4uz9zSJ8yweZUl8OQ3ELDrT2XB7h+FZnUWn1MIoKfZQwG09N7Sw6FD7CHIoOitpf2U04RMF0XnLS6kkSTyaWlVQ3MP8Zv3w5frr7Rw2w3BG6kXLPM/+qR1HiJMfeZ69MSTU/pYjHv1fsOQ9mP+GJxsGZBTal3C9P8AOPb6PYmsUxj6urEZC57+9hjs6xmrrh0JM3zxJRw4YYF2jIChgblZii1WnMKx9RLyykqTg6ktVGe3utNq/CzNs/NfctRUnXJHlhI97T5/2rVdqaZSS+vFbeAcG9tXvkFhP3zTvuVS8VAhFOoR0IE5dkEF01qKmedeUaF9oVlAkDHSofZXOvSpX6KTF6uOJJfJqD0UyDH8GAAD//+Z9a7izBwAA",
                    "objectset.rio.cattle.io/id": "svccontroller",
                    "objectset.rio.cattle.io/owner-gvk": "/v1, Kind=Service",
                    "objectset.rio.cattle.io/owner-name": "traefik",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "name": "traefik",
                        "uid": "4062b29e-c545-4423-bc07-c98f201e904f",
                        "controller": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:41:13Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deprecated.daemonset.template.generation": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/id": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:objectset.rio.cattle.io/hash": {},
                                    "f:svccontroller.k3s.cattle.io/nodeselector": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"4062b29e-c545-4423-bc07-c98f201e904f\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:svccontroller.k3s.cattle.io/svcname": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"lb-port-443\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"DEST_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEST_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEST_PROTO\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SRC_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:hostPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            },
                                            "k:{\"name\":\"lb-port-80\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"DEST_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEST_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEST_PROTO\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SRC_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:hostPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {}
                                    }
                                },
                                "f:updateStrategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                }
                            },
                            "f:status": {
                                "f:currentNumberScheduled": {},
                                "f:desiredNumberScheduled": {},
                                "f:numberUnavailable": {},
                                "f:observedGeneration": {},
                                "f:updatedNumberScheduled": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "svclb-traefik"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "svclb-traefik",
                            "svccontroller.k3s.cattle.io/svcname": "traefik"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "lb-port-80",
                                "image": "rancher/klipper-lb:v0.1.2",
                                "ports": [
                                    {
                                        "name": "lb-port-80",
                                        "hostPort": 80,
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "SRC_PORT",
                                        "value": "80"
                                    },
                                    {
                                        "name": "DEST_PROTO",
                                        "value": "TCP"
                                    },
                                    {
                                        "name": "DEST_PORT",
                                        "value": "80"
                                    },
                                    {
                                        "name": "DEST_IP",
                                        "value": "10.43.230.78"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "lb-port-443",
                                "image": "rancher/klipper-lb:v0.1.2",
                                "ports": [
                                    {
                                        "name": "lb-port-443",
                                        "hostPort": 443,
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "SRC_PORT",
                                        "value": "443"
                                    },
                                    {
                                        "name": "DEST_PROTO",
                                        "value": "TCP"
                                    },
                                    {
                                        "name": "DEST_PORT",
                                        "value": "443"
                                    },
                                    {
                                        "name": "DEST_IP",
                                        "value": "10.43.230.78"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "noderole.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 0,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberUnavailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments",
        "resourceVersion": "117395"
    },
    "items": [
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/metrics-server",
                "uid": "ee91448c-c3e6-4dc7-9c7b-a9fb774032cd",
                "resourceVersion": "82644",
                "generation": 1,
                "creationTimestamp": "2020-10-09T18:21:08Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "objectset.rio.cattle.io/hash": "e10e245e13e46a725c9dddd4f9eb239f147774fd"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "objectset.rio.cattle.io/applied": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"objectset.rio.cattle.io/id\":\"\",\"objectset.rio.cattle.io/owner-gvk\":\"k3s.cattle.io/v1, Kind=Addon\",\"objectset.rio.cattle.io/owner-name\":\"metrics-server-deployment\",\"objectset.rio.cattle.io/owner-namespace\":\"kube-system\"},\"labels\":{\"k8s-app\":\"metrics-server\",\"objectset.rio.cattle.io/hash\":\"e10e245e13e46a725c9dddd4f9eb239f147774fd\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\"},\"spec\":{\"containers\":[{\"image\":\"rancher/metrics-server:v0.3.6\",\"name\":\"metrics-server\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"}]}}}}",
                    "objectset.rio.cattle.io/id": "",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "metrics-server-deployment",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-12T15:16:41Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/id": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {},
                                    "f:objectset.rio.cattle.io/hash": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:k8s-app": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:k8s-app": {}
                                        },
                                        "f:name": {}
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"metrics-server\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"tmp-dir\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "rancher/metrics-server:v0.3.6",
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2020-10-09T18:21:37Z",
                        "lastTransitionTime": "2020-10-09T18:21:18Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"metrics-server-7566d596c8\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2020-10-12T15:16:41Z",
                        "lastTransitionTime": "2020-10-12T15:16:41Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "local-path-provisioner",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/local-path-provisioner",
                "uid": "9d2d65c0-96d6-4acc-8e6b-e1c0e9b6e23a",
                "resourceVersion": "112533",
                "generation": 1,
                "creationTimestamp": "2020-10-09T18:21:07Z",
                "labels": {
                    "objectset.rio.cattle.io/hash": "183f35c65ffbc3064603f43f1580d8c68a2dabd4"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "objectset.rio.cattle.io/applied": "H4sIAAAAAAAA/4xTXWsiSxD9K5d67hn1mogM3AdJcuFyN0Y2sC9BlrKnJnbsL7rL2RWZ/76Uo0mWjUmenLa6Tp86dc4eMJpvlLIJHirAGPOgHYGCjfE1VHBN0YadI8+gwBFjjYxQ7QG9D4xsgs9yDKsn0pyJy2RCqZHZUmnCwAgIqLP18MNTKh7bDVSwGedXlXak/vrf+PqfWV0H/yGER0dQgQ0abZE5JHykTzXliFo6N9sVFXmXmRx0CiyuyL472hrzGioYTcfN+FJPLptmpcfDycVkOG4uxs3ocjqsp3oyxb9rXNUXAvobyYi8LmIKrRHxKUFfP8MnR9LCJlG0RmOGaqQgkyXNIUnBIev1l2fWGOP5l7pOAZOLFpkOva8Waz8PceKkg2c0nlKG6kGOzqG45+H8pJkxiaWKQgffmEdQMCDWg/50/CmfcvCwVEC+PSAf9VvcXX+fz25v7hezqxtQ0KLd0r8pOCHTGLL1V2qevxfIsqfTjOWLyF3XLRUYJ1apIKHXa0qDtzlX7bAcliOJxqFhsbV2EazRO6jgv2YeeJEo9zn5aM1tsFtHt2HruVfMyeeR52sZXrD6P4q+E7qlEM+UWqNpprW0z997tDjeLbC/DAo4WEqnAD/sYUMyyVUybDTaQ+jynbc7CVGUm2IzuPlpMmfo1B6oaUgzVDAP93pN9dZK4HoYH2oqUrBUio2TJ6YsmXGY+SDBG5DLkzAnF8nEtxhlkX8qerRNd16hrut+BQAA//+A3qcH3gQAAA",
                    "objectset.rio.cattle.io/id": "",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "local-storage",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:40:10Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/id": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:objectset.rio.cattle.io/hash": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"local-path-provisioner\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {
                                                                ".": {},
                                                                "f:apiVersion": {},
                                                                "f:fieldPath": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/config/\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "local-path-provisioner"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "local-path-provisioner"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "local-path-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "local-path-provisioner",
                                "image": "rancher/local-path-provisioner:v0.0.11",
                                "command": [
                                    "local-path-provisioner",
                                    "start",
                                    "--config",
                                    "/etc/config/config.json"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "mountPath": "/etc/config/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "local-path-provisioner-service-account",
                        "serviceAccount": "local-path-provisioner-service-account",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2020-10-09T18:21:37Z",
                        "lastTransitionTime": "2020-10-09T18:21:18Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"local-path-provisioner-6d59f47c7\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2020-10-13T07:40:10Z",
                        "lastTransitionTime": "2020-10-13T07:40:10Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns",
                "uid": "a249c3f2-0a52-4180-b36a-70853a7c90fb",
                "resourceVersion": "112541",
                "generation": 1,
                "creationTimestamp": "2020-10-09T18:21:07Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/name": "CoreDNS",
                    "objectset.rio.cattle.io/hash": "bce283298811743a0386ab510f2f67ef74240c57"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "objectset.rio.cattle.io/applied": "H4sIAAAAAAAA/5xV23LjNgz9lQ6e5YtydTTTh22cdjNtXE8u+7Lj2YEpyGZNESoJeePJ6N87kGzHSbPZbZ9MkwfAweEh9ARY2U8UomUPGWBVxcE6hQRW1ueQwZgqx5uSvEACJQnmKAjZE6D3LCiWfdS/PP+LjESSfrDcNyjiqG95YDUJJN8856+eQm+xXkEGq+N4cLJOk59+tz7/+UOes/9uCo8lQQaGA+U+/hA8Vmg0ZlXPqRc3UaiEJgGHc3JtU6tR7GFV7SBdXl0GT0JRs23LXnKg8eTunbJLjEvIYG7oaHR8dDEapen5yTEOj0dnOD9Nh8VRcXZOxfnJ0cnQnJ4rkX+19A7pWJFRypEcGeGg6xLFLP94r5tGIyWg0GKjkMDOWb94qHIU6lI8Pnhco3U4dwRZ2iQgm0oJ3L7A6j6VldvFHTjlXT2bA+6GvaD1FCJkn58Aw0IX0DPsC0hgQGIGWzEGKnhhHcEsAVviQhkF9GZJYYfpbX+ztH/Wv4Atblo7N2VnzQYyuC4mLNNAsfO3s2vyFOM08Lxto0Dr6kD3y0BxyS6H7DSBpUj1G4meVyh6qYMloZMlJFBxEMhGw9EwgWiW1F7gx/v7qQpkvRWLbkwON3dk2OcRsjNF1sZQjAdl0gTElsS17IGnbzlC63Vq7cWbthROj/foLTKwsGEHGTyMlc53Qnpiqpdh95dvhl2kB4ElSbAmvhE4SyAQ5vZ/6auRm2d501H6o/Km/0XeQJHrYKg1q7OlldiZueSgdknPhzcWWuDfNcXu1FS1Hg2HZTsht9AOqeYmUwcrm0v2Qo9tV+gcf50Gu7aOFnQVDbp2kEJWoIuUgMEK59ZZsR0VzHN9CJOr+y+/XE/GX+6ubj9dX16p9/PAlZ6hczBrOo3/9G5zyyy/WkfbCZFJqKlJYM2uLumGa7+1TanL6VbmgwcGB2bzhV30ukh4rrDNOdObzX3cv6kxFVg7fU6ec7o7mEdzEuy/HJ8cIQNnff3YDjEKa2vogzHKavLa7MKOwu6T8/kJVqT1LoMVa9C1n4nYMkuAK0VqWbh6tHpT6lwqCjICGUz4ziwpr5021KVRsr3Ajl4xLDEKhbdTznaC7p9gYRc3WGmzVqh8QXM3sJKdq/c7Sq0DTTinj6y596jnLS33agA037ilZtY0TfNPAAAA//+Y+WTs3AcAAA",
                    "objectset.rio.cattle.io/id": "",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "coredns",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:40:11Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/id": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {},
                                    "f:kubernetes.io/name": {},
                                    "f:objectset.rio.cattle.io/hash": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:k8s-app": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:k8s-app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"coredns\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:nodeSelector": {
                                            ".": {},
                                            "f:beta.kubernetes.io/os": {}
                                        },
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        },
                                        {
                                            "key": "NodeHosts",
                                            "path": "NodeHosts"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "rancher/coredns-coredns:1.6.9",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2020-10-09T18:21:18Z",
                        "lastTransitionTime": "2020-10-09T18:21:18Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2020-10-09T18:21:52Z",
                        "lastTransitionTime": "2020-10-09T18:21:18Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-7944c66d8d\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "traefik",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/traefik",
                "uid": "279d9e5f-0d75-4979-952a-7ad2c58a43c5",
                "resourceVersion": "112676",
                "generation": 1,
                "creationTimestamp": "2020-10-13T07:40:37Z",
                "labels": {
                    "app": "traefik",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "traefik-1.81.0",
                    "heritage": "Helm",
                    "release": "traefik"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "traefik",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "managedFields": [
                    {
                        "manager": "Go-http-client",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:40:37Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:release": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:release": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:checksum/config": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:chart": {},
                                            "f:heritage": {},
                                            "f:release": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"traefik\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8880,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9100,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/config\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/ssl\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"ssl\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:41:13Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "traefik",
                        "release": "traefik"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "traefik",
                            "chart": "traefik-1.81.0",
                            "heritage": "Helm",
                            "release": "traefik"
                        },
                        "annotations": {
                            "checksum/config": "160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "traefik",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "ssl",
                                "secret": {
                                    "secretName": "traefik-default-cert",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "traefik",
                                "image": "rancher/library-traefik:1.7.19",
                                "args": [
                                    "--configfile=/config/traefik.toml"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "httpn",
                                        "containerPort": 8880,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "dash",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9100,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "config",
                                        "mountPath": "/config"
                                    },
                                    {
                                        "name": "ssl",
                                        "mountPath": "/ssl"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ping",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 2,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ping",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 2,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 60,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "traefik",
                        "serviceAccount": "traefik",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2020-10-13T07:41:13Z",
                        "lastTransitionTime": "2020-10-13T07:41:13Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2020-10-13T07:41:13Z",
                        "lastTransitionTime": "2020-10-13T07:40:38Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"traefik-758cd5fc85\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "117395"
    },
    "items": [
        {
            "metadata": {
                "name": "metrics-server-7566d596c8",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/metrics-server-7566d596c8",
                "uid": "64bb3c2e-57f3-473d-971b-ff2ba98a03a0",
                "resourceVersion": "82640",
                "generation": 1,
                "creationTimestamp": "2020-10-09T18:21:18Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "7566d596c8"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "objectset.rio.cattle.io/applied": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"objectset.rio.cattle.io/id\":\"\",\"objectset.rio.cattle.io/owner-gvk\":\"k3s.cattle.io/v1, Kind=Addon\",\"objectset.rio.cattle.io/owner-name\":\"metrics-server-deployment\",\"objectset.rio.cattle.io/owner-namespace\":\"kube-system\"},\"labels\":{\"k8s-app\":\"metrics-server\",\"objectset.rio.cattle.io/hash\":\"e10e245e13e46a725c9dddd4f9eb239f147774fd\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\"},\"spec\":{\"containers\":[{\"image\":\"rancher/metrics-server:v0.3.6\",\"name\":\"metrics-server\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"}]}}}}",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "metrics-server-deployment",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "ee91448c-c3e6-4dc7-9c7b-a9fb774032cd",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-12T15:16:40Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"ee91448c-c3e6-4dc7-9c7b-a9fb774032cd\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:k8s-app": {},
                                        "f:pod-template-hash": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:k8s-app": {},
                                            "f:pod-template-hash": {}
                                        },
                                        "f:name": {}
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"metrics-server\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"tmp-dir\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "7566d596c8"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "7566d596c8"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "rancher/metrics-server:v0.3.6",
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "local-path-provisioner-6d59f47c7",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/local-path-provisioner-6d59f47c7",
                "uid": "3dd2e09c-272d-4f2e-8383-979fb56ca98f",
                "resourceVersion": "112532",
                "generation": 1,
                "creationTimestamp": "2020-10-09T18:21:18Z",
                "labels": {
                    "app": "local-path-provisioner",
                    "pod-template-hash": "6d59f47c7"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "objectset.rio.cattle.io/applied": "H4sIAAAAAAAA/4xTXWsiSxD9K5d67hn1mogM3AdJcuFyN0Y2sC9BlrKnJnbsL7rL2RWZ/76Uo0mWjUmenLa6Tp86dc4eMJpvlLIJHirAGPOgHYGCjfE1VHBN0YadI8+gwBFjjYxQ7QG9D4xsgs9yDKsn0pyJy2RCqZHZUmnCwAgIqLP18MNTKh7bDVSwGedXlXak/vrf+PqfWV0H/yGER0dQgQ0abZE5JHykTzXliFo6N9sVFXmXmRx0CiyuyL472hrzGioYTcfN+FJPLptmpcfDycVkOG4uxs3ocjqsp3oyxb9rXNUXAvobyYi8LmIKrRHxKUFfP8MnR9LCJlG0RmOGaqQgkyXNIUnBIev1l2fWGOP5l7pOAZOLFpkOva8Waz8PceKkg2c0nlKG6kGOzqG45+H8pJkxiaWKQgffmEdQMCDWg/50/CmfcvCwVEC+PSAf9VvcXX+fz25v7hezqxtQ0KLd0r8pOCHTGLL1V2qevxfIsqfTjOWLyF3XLRUYJ1apIKHXa0qDtzlX7bAcliOJxqFhsbV2EazRO6jgv2YeeJEo9zn5aM1tsFtHt2HruVfMyeeR52sZXrD6P4q+E7qlEM+UWqNpprW0z997tDjeLbC/DAo4WEqnAD/sYUMyyVUybDTaQ+jynbc7CVGUm2IzuPlpMmfo1B6oaUgzVDAP93pN9dZK4HoYH2oqUrBUio2TJ6YsmXGY+SDBG5DLkzAnF8nEtxhlkX8qerRNd16hrut+BQAA//+A3qcH3gQAAA",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "local-storage",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "local-path-provisioner",
                        "uid": "9d2d65c0-96d6-4acc-8e6b-e1c0e9b6e23a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:40:10Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"9d2d65c0-96d6-4acc-8e6b-e1c0e9b6e23a\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:pod-template-hash": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:pod-template-hash": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"local-path-provisioner\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {
                                                                ".": {},
                                                                "f:apiVersion": {},
                                                                "f:fieldPath": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/config/\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "local-path-provisioner",
                        "pod-template-hash": "6d59f47c7"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "local-path-provisioner",
                            "pod-template-hash": "6d59f47c7"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "local-path-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "local-path-provisioner",
                                "image": "rancher/local-path-provisioner:v0.0.11",
                                "command": [
                                    "local-path-provisioner",
                                    "start",
                                    "--config",
                                    "/etc/config/config.json"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "mountPath": "/etc/config/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "local-path-provisioner-service-account",
                        "serviceAccount": "local-path-provisioner-service-account",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "coredns-7944c66d8d",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-7944c66d8d",
                "uid": "7ba83f7c-e5ad-4fe2-95d9-af1cb7e1dac2",
                "resourceVersion": "112539",
                "generation": 1,
                "creationTimestamp": "2020-10-09T18:21:18Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7944c66d8d"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "objectset.rio.cattle.io/applied": "H4sIAAAAAAAA/5xV23LjNgz9lQ6e5YtydTTTh22cdjNtXE8u+7Lj2YEpyGZNESoJeePJ6N87kGzHSbPZbZ9MkwfAweEh9ARY2U8UomUPGWBVxcE6hQRW1ueQwZgqx5uSvEACJQnmKAjZE6D3LCiWfdS/PP+LjESSfrDcNyjiqG95YDUJJN8856+eQm+xXkEGq+N4cLJOk59+tz7/+UOes/9uCo8lQQaGA+U+/hA8Vmg0ZlXPqRc3UaiEJgGHc3JtU6tR7GFV7SBdXl0GT0JRs23LXnKg8eTunbJLjEvIYG7oaHR8dDEapen5yTEOj0dnOD9Nh8VRcXZOxfnJ0cnQnJ4rkX+19A7pWJFRypEcGeGg6xLFLP94r5tGIyWg0GKjkMDOWb94qHIU6lI8Pnhco3U4dwRZ2iQgm0oJ3L7A6j6VldvFHTjlXT2bA+6GvaD1FCJkn58Aw0IX0DPsC0hgQGIGWzEGKnhhHcEsAVviQhkF9GZJYYfpbX+ztH/Wv4Atblo7N2VnzQYyuC4mLNNAsfO3s2vyFOM08Lxto0Dr6kD3y0BxyS6H7DSBpUj1G4meVyh6qYMloZMlJFBxEMhGw9EwgWiW1F7gx/v7qQpkvRWLbkwON3dk2OcRsjNF1sZQjAdl0gTElsS17IGnbzlC63Vq7cWbthROj/foLTKwsGEHGTyMlc53Qnpiqpdh95dvhl2kB4ElSbAmvhE4SyAQ5vZ/6auRm2d501H6o/Km/0XeQJHrYKg1q7OlldiZueSgdknPhzcWWuDfNcXu1FS1Hg2HZTsht9AOqeYmUwcrm0v2Qo9tV+gcf50Gu7aOFnQVDbp2kEJWoIuUgMEK59ZZsR0VzHN9CJOr+y+/XE/GX+6ubj9dX16p9/PAlZ6hczBrOo3/9G5zyyy/WkfbCZFJqKlJYM2uLumGa7+1TanL6VbmgwcGB2bzhV30ukh4rrDNOdObzX3cv6kxFVg7fU6ec7o7mEdzEuy/HJ8cIQNnff3YDjEKa2vogzHKavLa7MKOwu6T8/kJVqT1LoMVa9C1n4nYMkuAK0VqWbh6tHpT6lwqCjICGUz4ziwpr5021KVRsr3Ajl4xLDEKhbdTznaC7p9gYRc3WGmzVqh8QXM3sJKdq/c7Sq0DTTinj6y596jnLS33agA037ilZtY0TfNPAAAA//+Y+WTs3AcAAA",
                    "objectset.rio.cattle.io/owner-gvk": "k3s.cattle.io/v1, Kind=Addon",
                    "objectset.rio.cattle.io/owner-name": "coredns",
                    "objectset.rio.cattle.io/owner-namespace": "kube-system"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "a249c3f2-0a52-4180-b36a-70853a7c90fb",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:40:11Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"a249c3f2-0a52-4180-b36a-70853a7c90fb\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:k8s-app": {},
                                        "f:pod-template-hash": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:k8s-app": {},
                                            "f:pod-template-hash": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"coredns\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:nodeSelector": {
                                            ".": {},
                                            "f:beta.kubernetes.io/os": {}
                                        },
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "7944c66d8d"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "7944c66d8d"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        },
                                        {
                                            "key": "NodeHosts",
                                            "path": "NodeHosts"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "rancher/coredns-coredns:1.6.9",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "traefik-758cd5fc85",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/traefik-758cd5fc85",
                "uid": "fb9cbe87-1846-4423-ab7b-82d677aebfae",
                "resourceVersion": "112670",
                "generation": 1,
                "creationTimestamp": "2020-10-13T07:40:38Z",
                "labels": {
                    "app": "traefik",
                    "chart": "traefik-1.81.0",
                    "heritage": "Helm",
                    "pod-template-hash": "758cd5fc85",
                    "release": "traefik"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "traefik",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "traefik",
                        "uid": "279d9e5f-0d75-4979-952a-7ad2c58a43c5",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:41:13Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:pod-template-hash": {},
                                    "f:release": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"279d9e5f-0d75-4979-952a-7ad2c58a43c5\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:pod-template-hash": {},
                                        "f:release": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:checksum/config": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:chart": {},
                                            "f:heritage": {},
                                            "f:pod-template-hash": {},
                                            "f:release": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"traefik\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8880,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9100,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/config\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/ssl\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"ssl\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "traefik",
                        "pod-template-hash": "758cd5fc85",
                        "release": "traefik"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "traefik",
                            "chart": "traefik-1.81.0",
                            "heritage": "Helm",
                            "pod-template-hash": "758cd5fc85",
                            "release": "traefik"
                        },
                        "annotations": {
                            "checksum/config": "160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "traefik",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "ssl",
                                "secret": {
                                    "secretName": "traefik-default-cert",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "traefik",
                                "image": "rancher/library-traefik:1.7.19",
                                "args": [
                                    "--configfile=/config/traefik.toml"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "httpn",
                                        "containerPort": 8880,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "dash",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9100,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "config",
                                        "mountPath": "/config"
                                    },
                                    {
                                        "name": "ssl",
                                        "mountPath": "/ssl"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ping",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 2,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ping",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 2,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 60,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "traefik",
                        "serviceAccount": "traefik",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/pods",
        "resourceVersion": "117395"
    },
    "items": [
        {
            "metadata": {
                "name": "metrics-server-7566d596c8-h64l2",
                "generateName": "metrics-server-7566d596c8-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/metrics-server-7566d596c8-h64l2",
                "uid": "6f83e4cf-99cd-46ac-888e-9179a944ecf8",
                "resourceVersion": "82634",
                "creationTimestamp": "2020-10-09T18:21:18Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "7566d596c8"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-7566d596c8",
                        "uid": "64bb3c2e-57f3-473d-971b-ff2ba98a03a0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:16:39Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"64bb3c2e-57f3-473d-971b-ff2ba98a03a0\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"metrics-server\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/tmp\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"tmp-dir\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    }
                                }
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.80\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-dir",
                        "emptyDir": {}
                    },
                    {
                        "name": "metrics-server-token-vnfkf",
                        "secret": {
                            "secretName": "metrics-server-token-vnfkf",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server",
                        "image": "rancher/metrics-server:v0.3.6",
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "metrics-server-token-vnfkf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T18:21:18Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:37Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:37Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T18:21:18Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.80",
                "podIPs": [
                    {
                        "ip": "10.42.0.80"
                    }
                ],
                "startTime": "2020-10-09T18:21:18Z",
                "containerStatuses": [
                    {
                        "name": "metrics-server",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:16:27Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 5,
                        "image": "docker.io/rancher/metrics-server:v0.3.6",
                        "imageID": "docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e",
                        "containerID": "containerd://1b724abe835de8bb764fb1ecaa64095f93e66dc9e4bd007e98c51513f78e8432",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "local-path-provisioner-6d59f47c7-rzblb",
                "generateName": "local-path-provisioner-6d59f47c7-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/local-path-provisioner-6d59f47c7-rzblb",
                "uid": "7ac37bd8-f5c0-4b46-84a7-64bd293584b8",
                "resourceVersion": "112531",
                "creationTimestamp": "2020-10-09T18:21:18Z",
                "labels": {
                    "app": "local-path-provisioner",
                    "pod-template-hash": "6d59f47c7"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "local-path-provisioner-6d59f47c7",
                        "uid": "3dd2e09c-272d-4f2e-8383-979fb56ca98f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T07:40:10Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"3dd2e09c-272d-4f2e-8383-979fb56ca98f\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"local-path-provisioner\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {
                                                        ".": {},
                                                        "f:apiVersion": {},
                                                        "f:fieldPath": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/config/\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"config-volume\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    }
                                }
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.82\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "local-path-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "local-path-provisioner-service-account-token-mvf4j",
                        "secret": {
                            "secretName": "local-path-provisioner-service-account-token-mvf4j",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "local-path-provisioner",
                        "image": "rancher/local-path-provisioner:v0.0.11",
                        "command": [
                            "local-path-provisioner",
                            "start",
                            "--config",
                            "/etc/config/config.json"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "mountPath": "/etc/config/"
                            },
                            {
                                "name": "local-path-provisioner-service-account-token-mvf4j",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "local-path-provisioner-service-account",
                "serviceAccount": "local-path-provisioner-service-account",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T18:21:18Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:39:55Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:39:55Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T18:21:18Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.82",
                "podIPs": [
                    {
                        "ip": "10.42.0.82"
                    }
                ],
                "startTime": "2020-10-09T18:21:18Z",
                "containerStatuses": [
                    {
                        "name": "local-path-provisioner",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-13T07:39:55Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Error",
                                "startedAt": "2020-10-12T15:16:26Z",
                                "finishedAt": "2020-10-13T07:39:13Z",
                                "containerID": "containerd://b0cb4a767347681dc01b882503c6c196a49c231fe9317e33c56c2538c5164241"
                            }
                        },
                        "ready": true,
                        "restartCount": 153,
                        "image": "docker.io/rancher/local-path-provisioner:v0.0.11",
                        "imageID": "docker.io/rancher/local-path-provisioner@sha256:0d60b97b101e432606035ab955c623604493e8956484af1cfa207753329bdf81",
                        "containerID": "containerd://59967c34919675f3f78aff3f860f8ace21a7bef07da2aa9498de3faea014198b",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "coredns-7944c66d8d-k54ht",
                "generateName": "coredns-7944c66d8d-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-7944c66d8d-k54ht",
                "uid": "cfa1d3df-5c8d-4341-bcc9-9aa751b477a8",
                "resourceVersion": "112535",
                "creationTimestamp": "2020-10-09T18:21:18Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7944c66d8d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-7944c66d8d",
                        "uid": "7ba83f7c-e5ad-4fe2-95d9-af1cb7e1dac2",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T07:40:11Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"7ba83f7c-e5ad-4fe2-95d9-af1cb7e1dac2\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"coredns\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:securityContext": {
                                            ".": {},
                                            "f:allowPrivilegeEscalation": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {},
                                                "f:drop": {}
                                            },
                                            "f:readOnlyRootFilesystem": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:nodeSelector": {
                                    ".": {},
                                    "f:beta.kubernetes.io/os": {}
                                },
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"config-volume\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:items": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    }
                                }
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.78\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                },
                                {
                                    "key": "NodeHosts",
                                    "path": "NodeHosts"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-4spfv",
                        "secret": {
                            "secretName": "coredns-token-4spfv",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "rancher/coredns-coredns:1.6.9",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "coredns-token-4spfv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T18:21:18Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:40:01Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:40:01Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T18:21:18Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.78",
                "podIPs": [
                    {
                        "ip": "10.42.0.78"
                    }
                ],
                "startTime": "2020-10-09T18:21:18Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:12:29Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2020-10-12T14:52:27Z",
                                "finishedAt": "2020-10-12T15:11:52Z",
                                "containerID": "containerd://dfd1af1e62a54340797fdf772116cadb8353d198cea9cded830c1c84c32fc689"
                            }
                        },
                        "ready": true,
                        "restartCount": 100,
                        "image": "docker.io/rancher/coredns-coredns:1.6.9",
                        "imageID": "docker.io/rancher/coredns-coredns@sha256:e70c936deab8efed89db66f04847fec137dbb81d5b456e8068b6e71cb770f6c0",
                        "containerID": "containerd://6f3a52b7acce013beb0b9094bcbdbb6a2ef86de7dc39c47aeaf57acdafbb177b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "svclb-traefik-wvrxc",
                "generateName": "svclb-traefik-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/svclb-traefik-wvrxc",
                "uid": "1ed64a7c-4b0c-4ddb-8c45-da45f410edb9",
                "resourceVersion": "112611",
                "creationTimestamp": "2020-10-13T07:40:38Z",
                "labels": {
                    "app": "svclb-traefik",
                    "controller-revision-hash": "dc4f54cdc",
                    "pod-template-generation": "1",
                    "svccontroller.k3s.cattle.io/svcname": "traefik"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "svclb-traefik",
                        "uid": "ea8f2800-db0f-4d5d-840a-1317f53eaa97",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T07:40:39Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:controller-revision-hash": {},
                                    "f:pod-template-generation": {},
                                    "f:svccontroller.k3s.cattle.io/svcname": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"ea8f2800-db0f-4d5d-840a-1317f53eaa97\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"lb-port-443\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DEST_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEST_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEST_PROTO\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"SRC_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:hostPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    },
                                    "k:{\"name\":\"lb-port-80\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DEST_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEST_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEST_PROTO\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"SRC_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:hostPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"PodScheduled\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-mpc2p",
                        "secret": {
                            "secretName": "default-token-mpc2p",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "lb-port-80",
                        "image": "rancher/klipper-lb:v0.1.2",
                        "ports": [
                            {
                                "name": "lb-port-80",
                                "hostPort": 80,
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "SRC_PORT",
                                "value": "80"
                            },
                            {
                                "name": "DEST_PROTO",
                                "value": "TCP"
                            },
                            {
                                "name": "DEST_PORT",
                                "value": "80"
                            },
                            {
                                "name": "DEST_IP",
                                "value": "10.43.230.78"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-mpc2p",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    },
                    {
                        "name": "lb-port-443",
                        "image": "rancher/klipper-lb:v0.1.2",
                        "ports": [
                            {
                                "name": "lb-port-443",
                                "hostPort": 443,
                                "containerPort": 443,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "SRC_PORT",
                                "value": "443"
                            },
                            {
                                "name": "DEST_PROTO",
                                "value": "TCP"
                            },
                            {
                                "name": "DEST_PORT",
                                "value": "443"
                            },
                            {
                                "name": "DEST_IP",
                                "value": "10.43.230.78"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-mpc2p",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "localhost"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "noderole.kubernetes.io/master",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:40:38Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) didn't have free ports for the requested pod ports."
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "helm-install-traefik-fnmd5",
                "generateName": "helm-install-traefik-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/helm-install-traefik-fnmd5",
                "uid": "d2bd68dd-dd91-4084-81d7-8d86fc466f01",
                "resourceVersion": "112622",
                "creationTimestamp": "2020-10-13T07:39:52Z",
                "labels": {
                    "controller-uid": "0eb4f367-c141-489e-a5fa-7f8d1d4e452e",
                    "helmcharts.helm.cattle.io/chart": "traefik",
                    "job-name": "helm-install-traefik"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "kind": "Job",
                        "name": "helm-install-traefik",
                        "uid": "0eb4f367-c141-489e-a5fa-7f8d1d4e452e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T07:40:41Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:controller-uid": {},
                                    "f:helmcharts.helm.cattle.io/chart": {},
                                    "f:job-name": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"0eb4f367-c141-489e-a5fa-7f8d1d4e452e\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"helm\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"CHART\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CHART_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HELM_DRIVER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HELM_VERSION\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"NO_PROXY\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPO\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"VALUES_HASH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"VERSION\"}": {
                                                ".": {},
                                                "f:name": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/config\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"values\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    }
                                }
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.100\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "values",
                        "configMap": {
                            "name": "chart-values-traefik",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "helm-traefik-token-85nbg",
                        "secret": {
                            "secretName": "helm-traefik-token-85nbg",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "helm",
                        "image": "rancher/klipper-helm:v0.2.7",
                        "args": [
                            "install"
                        ],
                        "env": [
                            {
                                "name": "NAME",
                                "value": "traefik"
                            },
                            {
                                "name": "VERSION"
                            },
                            {
                                "name": "REPO"
                            },
                            {
                                "name": "VALUES_HASH",
                                "value": "cfaa420eb38db08e829c9f1359fe1688d72fad5b816f2c99a4f23b58e94680fb"
                            },
                            {
                                "name": "HELM_DRIVER",
                                "value": "secret"
                            },
                            {
                                "name": "CHART_NAMESPACE",
                                "value": "kube-system"
                            },
                            {
                                "name": "CHART",
                                "value": "https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz"
                            },
                            {
                                "name": "HELM_VERSION"
                            },
                            {
                                "name": "NO_PROXY",
                                "value": ",10.42.0.0/16,10.43.0.0/16"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "values",
                                "mountPath": "/config"
                            },
                            {
                                "name": "helm-traefik-token-85nbg",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "OnFailure",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "helm-traefik",
                "serviceAccount": "helm-traefik",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Succeeded",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:39:54Z",
                        "reason": "PodCompleted"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:40:40Z",
                        "reason": "PodCompleted"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:40:40Z",
                        "reason": "PodCompleted"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:39:53Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.100",
                "podIPs": [
                    {
                        "ip": "10.42.0.100"
                    }
                ],
                "startTime": "2020-10-13T07:39:54Z",
                "containerStatuses": [
                    {
                        "name": "helm",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2020-10-13T07:40:31Z",
                                "finishedAt": "2020-10-13T07:40:38Z",
                                "containerID": "containerd://44e82dba2cda784a2d71482018f6f1717428dbecf8c175a493eb796db4c33c72"
                            }
                        },
                        "lastState": {},
                        "ready": false,
                        "restartCount": 0,
                        "image": "docker.io/rancher/klipper-helm:v0.2.7",
                        "imageID": "docker.io/rancher/klipper-helm@sha256:70c671e0b5bf5a9dffb90dabf59ee83fbcb27971d2e69f43a1c4021234d179a1",
                        "containerID": "containerd://44e82dba2cda784a2d71482018f6f1717428dbecf8c175a493eb796db4c33c72",
                        "started": false
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "traefik-758cd5fc85-bdpnd",
                "generateName": "traefik-758cd5fc85-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/traefik-758cd5fc85-bdpnd",
                "uid": "3dd1343f-a5b3-4d97-8d8b-c4b29f2405cb",
                "resourceVersion": "112669",
                "creationTimestamp": "2020-10-13T07:40:38Z",
                "labels": {
                    "app": "traefik",
                    "chart": "traefik-1.81.0",
                    "heritage": "Helm",
                    "pod-template-hash": "758cd5fc85",
                    "release": "traefik"
                },
                "annotations": {
                    "checksum/config": "160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "traefik-758cd5fc85",
                        "uid": "fb9cbe87-1846-4423-ab7b-82d677aebfae",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-13T07:41:13Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:checksum/config": {}
                                },
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:chart": {},
                                    "f:heritage": {},
                                    "f:pod-template-hash": {},
                                    "f:release": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"fb9cbe87-1846-4423-ab7b-82d677aebfae\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"traefik\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8880,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":9100,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/config\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"config\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"ssl\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.101\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config",
                        "configMap": {
                            "name": "traefik",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "ssl",
                        "secret": {
                            "secretName": "traefik-default-cert",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "traefik-token-jwwk8",
                        "secret": {
                            "secretName": "traefik-token-jwwk8",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "traefik",
                        "image": "rancher/library-traefik:1.7.19",
                        "args": [
                            "--configfile=/config/traefik.toml"
                        ],
                        "ports": [
                            {
                                "name": "http",
                                "containerPort": 80,
                                "protocol": "TCP"
                            },
                            {
                                "name": "httpn",
                                "containerPort": 8880,
                                "protocol": "TCP"
                            },
                            {
                                "name": "https",
                                "containerPort": 443,
                                "protocol": "TCP"
                            },
                            {
                                "name": "dash",
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9100,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "config",
                                "mountPath": "/config"
                            },
                            {
                                "name": "ssl",
                                "mountPath": "/ssl"
                            },
                            {
                                "name": "traefik-token-jwwk8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/ping",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 2,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ping",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 2,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 60,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "traefik",
                "serviceAccount": "traefik",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:40:39Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:41:13Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:41:13Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:40:39Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.101",
                "podIPs": [
                    {
                        "ip": "10.42.0.101"
                    }
                ],
                "startTime": "2020-10-13T07:40:39Z",
                "containerStatuses": [
                    {
                        "name": "traefik",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-13T07:40:59Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/rancher/library-traefik:1.7.19",
                        "imageID": "docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d",
                        "containerID": "containerd://d4311e64a52d4eeeecfe9da0bdad3a8b6ddd54a3b4748da7f0d558b780277b1a",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container metrics-server of pod kube-system/metrics-server-7566d596c8-h64l2 ====
I1012 15:16:59.807500       1 serving.go:312] Generated self-signed cert (apiserver.local.config/certificates/apiserver.crt, apiserver.local.config/certificates/apiserver.key)
I1012 15:17:11.136649       1 secure_serving.go:116] Serving securely on [::]:443
E1012 15:18:11.088322       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:19:11.084206       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:20:11.081626       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:21:11.085609       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:22:11.084856       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:23:11.082825       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:24:11.079180       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:25:11.085570       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:26:11.085587       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:27:11.080375       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:28:11.079435       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:29:11.083057       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:30:11.083103       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:31:11.083532       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:32:11.085790       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:33:11.083310       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:34:11.085020       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:35:11.083321       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:36:11.086233       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:37:11.086846       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:38:11.085470       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:39:11.089967       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:40:11.085835       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:41:11.079015       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:42:11.095900       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:43:11.086869       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:44:11.083739       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:45:11.080092       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:46:11.087158       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:47:11.084478       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:48:11.081676       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:49:11.082596       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:50:11.081646       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:51:11.085100       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:52:11.083212       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:53:11.094544       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:54:11.088456       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:55:11.085405       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:56:11.084177       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:57:11.085693       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:58:11.088534       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 15:59:11.078944       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:00:11.079016       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:01:11.082259       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:02:11.090458       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:03:11.083129       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:04:11.086319       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:05:11.085238       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:06:11.139483       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:07:11.086626       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:08:11.091029       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:09:11.085582       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:10:11.091494       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:11:11.082028       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:12:11.077898       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:13:11.084848       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:14:11.090141       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:15:11.089436       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:16:11.079880       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:17:11.085484       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:18:11.083186       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:19:11.085601       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:20:11.085078       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:21:11.079197       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:22:11.086085       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:23:11.444277       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:24:11.081118       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:25:11.084614       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:26:11.087983       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:27:11.082606       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:28:11.092475       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:29:11.091956       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:30:11.082641       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:31:11.087916       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:32:11.082825       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:33:11.085740       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:34:11.083535       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:35:11.082853       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:36:11.088945       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:37:11.082832       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:38:11.320786       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:39:11.083746       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:40:11.084978       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:41:11.083010       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:42:11.086708       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:43:11.084426       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:44:11.083211       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:45:11.085407       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:46:11.086510       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:47:11.091861       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:48:11.084264       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:49:11.079597       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:50:11.084668       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:51:11.085209       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:52:11.082654       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:53:11.094774       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:54:11.079691       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:55:11.086327       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:56:11.086342       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:57:11.087528       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:58:11.085568       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 16:59:11.083338       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:00:11.085570       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:01:11.086819       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:02:11.083767       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:03:11.087178       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:04:11.078434       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:05:11.078639       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:06:11.085670       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:07:11.080945       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:08:11.082171       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:09:11.086170       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:10:11.079255       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:11:11.082589       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:12:11.085861       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:13:11.082488       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:14:11.082691       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:15:11.078155       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:16:11.089627       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:17:11.082658       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:18:11.085311       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:19:11.081635       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:20:11.081962       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:21:11.082134       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:22:11.087522       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:23:11.090178       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:24:11.085662       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:25:11.086288       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:26:11.085112       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:27:11.084629       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:28:11.078655       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:29:11.087987       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:30:11.082755       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:31:11.087209       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:32:11.097144       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:33:11.081413       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:34:11.083501       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:35:11.085232       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:36:11.085416       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:37:11.090605       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:38:11.089653       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:39:11.086013       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:40:11.088130       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:41:11.079064       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:42:11.084907       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:43:11.087407       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:44:11.079726       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:45:11.083037       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:46:11.086762       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:47:11.083239       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:48:11.079562       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:49:11.078536       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:50:11.082764       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:51:11.084880       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:52:11.081436       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:53:11.090819       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:54:11.082599       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:55:11.088472       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:56:11.082060       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:57:11.079138       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:58:11.090385       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 17:59:11.091275       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:00:11.082857       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:01:11.086094       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:02:11.089254       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:03:11.078059       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:04:11.083835       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:05:11.083712       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:06:11.085564       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:07:11.085714       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:08:11.089656       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:09:11.084914       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:10:11.086211       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:11:11.084117       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:12:11.082590       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:13:11.082680       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:14:11.085163       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:15:11.084025       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:16:11.079692       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:17:11.079941       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:18:11.082843       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:19:11.083007       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:20:11.084433       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:21:11.083196       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:22:11.087658       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:23:11.080057       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:24:11.078902       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:25:11.085221       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:26:11.083155       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:27:11.085738       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:28:11.081490       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:29:11.082872       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:30:11.086210       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:31:11.084304       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:32:11.078718       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:33:11.082435       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:34:11.087188       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:35:11.083860       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:36:11.090764       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:37:11.078595       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:38:11.083998       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:39:11.088665       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:40:11.083436       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:41:11.091478       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:42:11.084299       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:43:11.082714       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:44:11.083826       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:45:11.084042       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:46:11.089098       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:47:11.085660       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:48:11.078908       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:49:11.084492       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:50:11.078349       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:51:11.077504       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:52:11.083940       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:53:11.082959       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:54:11.083720       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:55:11.085351       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:56:11.083138       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:57:11.077546       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:58:11.088816       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 18:59:11.089480       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:00:11.089732       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:01:11.083774       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:02:11.083292       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:03:11.088044       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:04:11.079483       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:05:11.085837       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:06:11.086747       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:07:11.084872       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:08:11.086113       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:09:11.085068       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:10:11.085448       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:11:11.083528       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:12:11.081344       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:13:11.084655       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:14:11.078568       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:15:11.089928       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:16:11.083260       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:17:11.084760       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:18:11.079486       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:19:11.080345       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:20:11.078819       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:21:11.083856       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:22:11.080316       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:23:11.112109       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:24:11.079792       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:25:11.080450       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:26:11.083644       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:27:11.083853       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:28:11.085017       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:29:11.089209       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:30:11.086469       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:31:11.080068       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:32:11.089613       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:33:11.201271       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:34:11.086499       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:35:11.085017       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:36:11.083144       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:37:11.081689       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:38:11.082129       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:39:11.083879       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:40:11.095263       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:41:11.081403       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:42:11.090171       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:43:11.084256       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:44:11.081850       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:45:11.086229       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:46:11.083312       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:47:11.079741       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:48:11.086284       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:49:11.090708       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:50:11.083748       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:51:11.078099       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:52:11.084297       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:53:11.087632       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:54:11.083519       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:55:11.083175       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:56:11.087528       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:57:11.085378       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:58:11.083939       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 19:59:11.083392       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:00:11.083331       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:01:11.087194       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:02:11.091500       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:03:11.079783       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:04:11.085233       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:05:11.082354       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:06:11.085285       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:07:11.084843       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:08:11.082847       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:09:11.084460       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:10:11.084738       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:11:11.082925       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:12:11.084057       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:13:11.087818       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:14:11.077531       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:15:11.078837       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:16:11.082029       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:17:11.084985       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:18:11.081890       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:19:11.082389       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:20:11.081114       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:21:11.083633       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:22:11.085158       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:23:11.086015       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:24:11.088651       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:25:11.083291       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:26:11.083773       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:27:11.089910       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:28:11.082533       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:29:11.080235       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:30:11.091323       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:31:11.083597       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:32:11.083878       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:33:11.082861       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1012 20:34:11.083850       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
I1013 05:33:10.507058       1 log.go:172] http: TLS handshake error from 10.42.0.1:18934: EOF
I1013 05:33:23.781248       1 log.go:172] http: TLS handshake error from 10.42.0.1:2683: EOF
I1013 05:33:25.823372       1 log.go:172] http: TLS handshake error from 10.42.0.1:5758: EOF
I1013 05:33:25.852413       1 log.go:172] http: TLS handshake error from 10.42.0.1:64635: EOF
I1013 05:33:26.302919       1 log.go:172] http: TLS handshake error from 10.42.0.1:48463: EOF
I1013 05:33:26.363565       1 log.go:172] http: TLS handshake error from 10.42.0.1:43728: EOF
I1013 05:33:26.490111       1 log.go:172] http: TLS handshake error from 10.42.0.1:37616: EOF
I1013 05:33:26.546130       1 log.go:172] http: TLS handshake error from 10.42.0.1:19297: EOF
I1013 05:33:27.010478       1 log.go:172] http: TLS handshake error from 10.42.0.1:35469: EOF
I1013 05:33:27.116902       1 log.go:172] http: TLS handshake error from 10.42.0.1:42029: EOF
I1013 05:33:27.162413       1 log.go:172] http: TLS handshake error from 10.42.0.1:4794: EOF
I1013 05:33:27.168281       1 log.go:172] http: TLS handshake error from 10.42.0.1:24727: EOF
I1013 05:33:27.168679       1 log.go:172] http: TLS handshake error from 10.42.0.1:34632: EOF
I1013 05:33:27.203298       1 log.go:172] http: TLS handshake error from 10.42.0.1:1973: EOF
I1013 05:33:27.211541       1 log.go:172] http: TLS handshake error from 10.42.0.1:17989: EOF
I1013 05:33:27.238135       1 log.go:172] http: TLS handshake error from 10.42.0.1:46192: EOF
I1013 05:33:27.275170       1 log.go:172] http: TLS handshake error from 10.42.0.1:52734: EOF
I1013 05:33:27.280611       1 log.go:172] http: TLS handshake error from 10.42.0.1:49011: EOF
I1013 05:33:27.299851       1 log.go:172] http: TLS handshake error from 10.42.0.1:7449: EOF
I1013 05:33:27.307564       1 log.go:172] http: TLS handshake error from 10.42.0.1:25830: EOF
I1013 05:33:27.325281       1 log.go:172] http: TLS handshake error from 10.42.0.1:60750: EOF
I1013 05:33:27.604449       1 log.go:172] http: TLS handshake error from 10.42.0.1:51632: EOF
I1013 05:33:27.609871       1 log.go:172] http: TLS handshake error from 10.42.0.1:45099: EOF
I1013 05:33:27.614142       1 log.go:172] http: TLS handshake error from 10.42.0.1:24799: EOF
I1013 05:33:27.614143       1 log.go:172] http: TLS handshake error from 10.42.0.1:44566: EOF
E1013 05:33:27.670551       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:33:59.018792       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:34:59.019963       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:35:59.019468       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:36:59.023333       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:37:59.021512       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:38:59.021241       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:39:59.022144       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:40:59.027314       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:41:59.020381       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:42:59.018719       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:43:59.021535       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:44:59.018438       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:45:59.020882       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:46:59.025385       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:47:59.022903       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:48:59.016635       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:49:59.023113       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:50:59.025425       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:51:59.022522       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:52:59.017778       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:53:59.019158       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:54:59.024397       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:55:59.029212       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:56:59.025071       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:57:59.026447       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:58:59.025704       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 05:59:59.024116       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:00:59.019627       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:01:59.016715       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:02:59.019008       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:03:59.025422       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:04:59.018222       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:05:59.022520       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:06:59.020279       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:07:59.020868       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:08:59.016640       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:09:59.021381       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:10:59.019331       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:11:59.020996       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:12:59.020580       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:13:59.027665       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:14:59.015335       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:15:59.020704       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:16:59.025436       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:17:59.022144       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:18:59.022134       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:19:59.019862       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:20:59.026334       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:21:59.022215       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:22:59.020060       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:23:59.020620       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:24:59.015401       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:25:59.015173       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:26:59.025217       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:27:59.019935       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:28:59.022350       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:29:59.022892       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:30:59.021935       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:31:59.023016       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:32:59.021105       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:33:59.022583       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:34:59.021087       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:35:59.022952       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:36:59.022061       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:37:59.020232       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:38:59.021035       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:39:59.026339       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:40:59.019421       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:41:59.016236       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:42:59.026883       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:43:59.027959       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:44:59.021416       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:45:59.019702       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:46:59.021456       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:47:59.018079       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:48:59.014754       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:49:59.023480       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:50:59.021251       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:51:59.018796       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:52:59.019871       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:53:59.026844       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:54:59.022503       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:55:59.023411       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:56:59.021785       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:57:59.022262       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:58:59.022784       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 06:59:59.020491       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:00:59.020382       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:01:59.016116       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:02:59.015400       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:03:59.017283       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:04:59.020579       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:05:59.019977       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:06:59.020697       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:07:59.023696       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:08:59.023490       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:09:59.020650       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:10:59.018621       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:11:59.017011       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:12:59.028203       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:13:59.015678       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:14:59.022526       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:15:59.021282       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:16:59.020697       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:17:59.022443       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:18:59.020391       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:19:59.015912       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:20:59.025846       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:21:59.021643       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:22:59.016420       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:23:59.020976       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:24:59.023224       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:25:59.021048       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:26:59.022314       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:27:59.026879       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:28:59.019015       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:29:59.021735       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:30:59.025690       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:31:59.016333       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:32:59.019865       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:33:59.019185       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:34:59.017580       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:35:59.016566       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:36:59.026792       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:37:59.024216       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:38:59.017003       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:39:03.323058       1 reflector.go:270] k8s.io/client-go/informers/factory.go:133: Failed to watch *v1.Pod: Get https://10.43.0.1:443/api/v1/pods?resourceVersion=104075&timeout=6m53s&timeoutSeconds=413&watch=true: dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:03.323292       1 reflector.go:270] k8s.io/client-go/informers/factory.go:133: Failed to watch *v1.Node: Get https://10.43.0.1:443/api/v1/nodes?resourceVersion=112203&timeout=5m53s&timeoutSeconds=353&watch=true: dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:07.797547       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:07.876444       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:08.808546       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:08.894094       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:09.827926       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:09.919784       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:10.858073       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:10.951118       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:11.865736       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:11.957264       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:12.894646       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:13.002554       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:13.907158       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:14.037357       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:15.087348       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:15.096633       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:16.162422       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:16.170715       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:17.222570       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:17.223045       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:18.282052       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:18.282228       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:19.298147       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:19.299867       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:20.362508       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:20.362624       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:21.402306       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:21.406866       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:22.414348       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:22.432011       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:23.444684       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:23.455161       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:23.849315       1 webhook.go:196] Failed to make webhook authorizer request: the server is currently unable to handle the request (post subjectaccessreviews.authorization.k8s.io)
E1013 07:39:23.849439       1 errors.go:77] the server is currently unable to handle the request (post subjectaccessreviews.authorization.k8s.io)
E1013 07:39:24.450137       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Pod: the server is currently unable to handle the request (get pods)
E1013 07:39:24.463325       1 reflector.go:126] k8s.io/client-go/informers/factory.go:133: Failed to list *v1.Node: the server is currently unable to handle the request (get nodes)
E1013 07:39:59.016686       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:40:59.023882       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:41:59.018804       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:42:59.020270       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:43:59.019932       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:44:59.020986       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:45:59.023120       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:46:59.020456       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:47:59.015065       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:48:59.022128       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:49:59.022883       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:50:59.022495       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:51:59.018926       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:52:59.019108       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:53:59.018844       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:54:59.025498       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:55:59.021757       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:56:59.019216       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:57:59.018492       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:58:59.023135       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 07:59:59.016343       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:00:59.037178       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:01:59.021282       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:02:59.028957       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:03:59.015742       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:04:59.016080       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:05:59.024000       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:06:59.018502       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:07:59.022647       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:08:59.015888       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:09:59.017981       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:10:59.026031       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:11:59.028359       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:12:59.020831       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:13:59.015743       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:14:59.022202       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:15:59.024293       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:16:59.017944       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:17:59.018856       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:18:59.022031       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:19:59.023115       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:20:59.036925       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:21:59.015999       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:22:59.023383       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:23:59.021034       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:24:59.018410       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:25:59.020117       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:26:59.020057       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:27:59.021788       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:28:59.024941       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:29:59.019241       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:30:59.060639       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:31:59.023815       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:32:59.022310       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:33:59.024666       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:34:59.021061       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:35:59.015099       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:36:59.020032       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:37:59.022900       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:38:59.021699       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:39:59.023786       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:40:59.023492       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:41:59.021968       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:42:59.018583       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:43:59.022392       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:44:59.017692       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:45:59.020369       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:46:59.020065       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:47:59.019930       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:48:59.016681       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:49:59.021993       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:50:59.026706       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
E1013 08:51:59.019330       1 manager.go:111] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:localhost: unable to fetch metrics from Kubelet localhost (localhost): Get https://localhost:10250/stats/summary?only_cpu_and_memory=true: dial tcp [::1]:10250: connect: connection refused
==== END logs for container metrics-server of pod kube-system/metrics-server-7566d596c8-h64l2 ====
==== START logs for container local-path-provisioner of pod kube-system/local-path-provisioner-6d59f47c7-rzblb ====
ERROR: logging before flag.Parse: I1013 07:39:55.375883       1 leaderelection.go:187] attempting to acquire leader lease  kube-system/rancher.io-local-path...
ERROR: logging before flag.Parse: I1013 07:40:14.255755       1 leaderelection.go:196] successfully acquired lease kube-system/rancher.io-local-path
ERROR: logging before flag.Parse: I1013 07:40:14.256025       1 event.go:221] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"rancher.io-local-path", UID:"c147edd9-1ff7-459a-965f-6955af3f16a7", APIVersion:"v1", ResourceVersion:"112547", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' local-path-provisioner-6d59f47c7-rzblb_498c5b9f-0d27-11eb-abb9-9a96f5832812 became leader
ERROR: logging before flag.Parse: I1013 07:40:14.256061       1 controller.go:572] Starting provisioner controller rancher.io/local-path_local-path-provisioner-6d59f47c7-rzblb_498c5b9f-0d27-11eb-abb9-9a96f5832812!
ERROR: logging before flag.Parse: I1013 07:40:14.935603       1 controller.go:621] Started provisioner controller rancher.io/local-path_local-path-provisioner-6d59f47c7-rzblb_498c5b9f-0d27-11eb-abb9-9a96f5832812!
==== END logs for container local-path-provisioner of pod kube-system/local-path-provisioner-6d59f47c7-rzblb ====
==== START logs for container coredns of pod kube-system/coredns-7944c66d8d-k54ht ====
.:53
[INFO] plugin/reload: Running configuration MD5 = 4665410bf21c8b272fcfd562c482cb82
CoreDNS-1.6.9
linux/amd64, go1.14.1, 1766568
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:49947->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:35970->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:58713->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:60776->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:57226->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:42128->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:37591->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:38053->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:55696->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 870569875144990215.5693720049472724640. HINFO: read udp 10.42.0.78:56269->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 alertmanager-prometheus-prometheus-oper-alertmanager-0.alertmanager-operated.monitoring.svc. A: read udp 10.42.0.78:43499->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 alertmanager-prometheus-prometheus-oper-alertmanager-0.alertmanager-operated.monitoring.svc. A: read udp 10.42.0.78:38665->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:49986->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:40102->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:60997->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:43105->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:41877->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:55057->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:53379->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:37954->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:35412->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:60476->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:33551->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:40869->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:52885->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:53318->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:35531->10.0.2.3:53: i/o timeout
E1013 07:39:03.128106       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Namespace: Get "https://10.43.0.1:443/api/v1/namespaces?allowWatchBookmarks=true&resourceVersion=81805&timeout=6m34s&timeoutSeconds=394&watch=true": dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:03.128188       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Endpoints: Get "https://10.43.0.1:443/api/v1/endpoints?allowWatchBookmarks=true&resourceVersion=112398&timeout=9m10s&timeoutSeconds=550&watch=true": dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:03.128240       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Service: Get "https://10.43.0.1:443/api/v1/services?allowWatchBookmarks=true&resourceVersion=110042&timeout=6m18s&timeoutSeconds=378&watch=true": dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:04.131041       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Namespace: Get "https://10.43.0.1:443/api/v1/namespaces?allowWatchBookmarks=true&resourceVersion=81805&timeout=5m2s&timeoutSeconds=302&watch=true": dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:04.137370       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Endpoints: Get "https://10.43.0.1:443/api/v1/endpoints?allowWatchBookmarks=true&resourceVersion=112398&timeout=9m29s&timeoutSeconds=569&watch=true": dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:04.146629       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Service: Get "https://10.43.0.1:443/api/v1/services?allowWatchBookmarks=true&resourceVersion=110042&timeout=6m51s&timeoutSeconds=411&watch=true": dial tcp 10.43.0.1:443: connect: connection refused
E1013 07:39:05.350845       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:05.400046       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:05.437902       1 reflector.go:307] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to watch *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:06.361114       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:06.448961       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:06.449064       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:07.434835       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:07.480577       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:07.503043       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:08.441619       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:08.485550       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:08.533215       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:09.470338       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:09.495221       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:09.560956       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:10.500408       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:10.516106       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:10.606541       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:11.503861       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:11.526419       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:11.609629       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:12.509223       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:12.532873       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:12.635284       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:13.526780       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:13.548184       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:13.653254       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:14.561254       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:14.620816       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:14.767208       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:15.605734       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:15.664856       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:15.850050       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:16.646598       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:16.689328       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:16.889200       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:17.697235       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:17.738272       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:17.961242       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:18.724343       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:18.768898       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:18.997198       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:19.750133       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:19.792840       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:20.013003       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:20.810459       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:20.836979       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:21.030839       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:21.818096       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:21.859752       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:22.051859       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:22.835790       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:22.895706       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:23.091288       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
E1013 07:39:23.846541       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Namespace: the server is currently unable to handle the request (get namespaces)
E1013 07:39:23.897976       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Endpoints: the server is currently unable to handle the request (get endpoints)
E1013 07:39:24.097824       1 reflector.go:153] pkg/mod/k8s.io/client-go@v0.17.4/tools/cache/reflector.go:105: Failed to list *v1.Service: the server is currently unable to handle the request (get services)
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:39509->10.0.2.3:53: i/o timeout
[ERROR] plugin/errors: 2 zipkin.istio-system. A: read udp 10.42.0.78:39382->10.0.2.3:53: i/o timeout
==== END logs for container coredns of pod kube-system/coredns-7944c66d8d-k54ht ====
==== START logs for container lb-port-80 of pod kube-system/svclb-traefik-wvrxc ====
==== END logs for container lb-port-80 of pod kube-system/svclb-traefik-wvrxc ====
==== START logs for container lb-port-443 of pod kube-system/svclb-traefik-wvrxc ====
==== END logs for container lb-port-443 of pod kube-system/svclb-traefik-wvrxc ====
==== START logs for container helm of pod kube-system/helm-install-traefik-fnmd5 ====
CHART=$(sed -e "s/%{KUBERNETES_API}%/${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/g" <<< "${CHART}")
set +v -x
+ cp /var/run/secrets/kubernetes.io/serviceaccount/ca.crt /usr/local/share/ca-certificates/
+ update-ca-certificates
WARNING: ca-certificates.crt does not contain exactly one certificate or CRL: skipping
+ export HELM_HOST=127.0.0.1:44134
+ HELM_HOST=127.0.0.1:44134
+ helm_v2 init --skip-refresh --client-only
+ tiller --listen=127.0.0.1:44134 --storage=secret
Creating /root/.helm 
Creating /root/.helm/repository 
Creating /root/.helm/repository/cache 
Creating /root/.helm/repository/local 
Creating /root/.helm/plugins 
Creating /root/.helm/starters 
Creating /root/.helm/cache/archive 
Creating /root/.helm/repository/repositories.yaml 
Adding stable repo with URL: https://kubernetes-charts.storage.googleapis.com 
Adding local repo with URL: http://127.0.0.1:8879/charts 
$HELM_HOME has been configured at /root/.helm.
Not installing Tiller due to 'client-only' flag having been set
[main] 2020/10/13 07:40:31 Starting Tiller v2.16.8 (tls=false)
[main] 2020/10/13 07:40:31 GRPC listening on 127.0.0.1:44134
[main] 2020/10/13 07:40:31 Probes listening on :44135
[main] 2020/10/13 07:40:31 Storage driver is Secret
[main] 2020/10/13 07:40:31 Max history per release is 0
++ helm_v2 ls --all '^traefik$' --output json
++ jq -r '.Releases | length'
[storage] 2020/10/13 07:40:31 listing all releases with filter
+ EXIST=
+ '[' '' == 1 ']'
+ '[' '' == v2 ']'
+ helm_content_decode
+ set -e
+ ENC_CHART_PATH=/chart/traefik.tgz.base64
+ CHART_PATH=/traefik.tgz
+ '[' '!' -f /chart/traefik.tgz.base64 ']'
+ return
+ helm_repo_init
+ grep -q -e 'https\?://'
+ echo 'chart path is a url, skipping repo update'
+ helm_v3 repo remove stable
chart path is a url, skipping repo update
Error: no repositories configured
+ true
+ return
+ helm_update install
+ '[' helm_v3 == helm_v3 ']'
++ jq -r '"\(.[0].app_version),\(.[0].status)"'
++ ++ tr '[:upper:]' '[:lower:]'
helm_v3 ls --all-namespaces --all -f '^traefik$' --output json
+ LINE=null,null
++ cut -f1 -d,
++ echo null,null
+ INSTALLED_VERSION=null
++ cut -f2 -d,
++ echo null,null
+ STATUS=null
+ '[' -e /config/values.yaml ']'
+ VALUES='--values /config/values.yaml'
+ '[' install = delete ']'
+ '[' -z null ']'
+ '[' null = deployed ']'
+ '[' null = failed ']'
+ '[' null = deleted ']'
+ helm_v3 install traefik https://10.43.0.1:443/static/charts/traefik-1.81.0.tgz --values /config/values.yaml
NAME: traefik
LAST DEPLOYED: Tue Oct 13 07:40:36 2020
NAMESPACE: kube-system
STATUS: deployed
REVISION: 1
NOTES:
1. Get Traefik's load balancer IP/hostname:

     NOTE: It may take a few minutes for this to become available.

     You can watch the status by running:

         $ kubectl get svc traefik --namespace kube-system -w

     Once 'EXTERNAL-IP' is no longer '<pending>':

         $ kubectl describe svc traefik --namespace kube-system | grep Ingress | awk '{print $3}'

2. Configure DNS records corresponding to Kubernetes ingress resources to point to the load balancer IP/hostname found in step 1
==== END logs for container helm of pod kube-system/helm-install-traefik-fnmd5 ====
==== START logs for container traefik of pod kube-system/traefik-758cd5fc85-bdpnd ====
{"level":"info","msg":"Using TOML configuration file /config/traefik.toml","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"No tls.defaultCertificate given for https: using the first item in tls.certificates as a fallback.","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Traefik version v1.7.19 built on 2019-10-28_02:07:32PM","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"\nStats collection is disabled.\nHelp us improve Traefik by turning this feature on :)\nMore details on: https://docs.traefik.io/v1.7/basics/#collected-data\n","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Preparing server https \u0026{Address::443 TLS:0xc0002303f0 Redirect:\u003cnil\u003e Auth:\u003cnil\u003e WhitelistSourceRange:[] WhiteList:\u003cnil\u003e Compress:true ProxyProtocol:\u003cnil\u003e ForwardedHeaders:0xc00089da20} with readTimeout=0s writeTimeout=0s idleTimeout=3m0s","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Preparing server prometheus \u0026{Address::9100 TLS:\u003cnil\u003e Redirect:\u003cnil\u003e Auth:\u003cnil\u003e WhitelistSourceRange:[] WhiteList:\u003cnil\u003e Compress:false ProxyProtocol:\u003cnil\u003e ForwardedHeaders:0xc00089da60} with readTimeout=0s writeTimeout=0s idleTimeout=3m0s","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Preparing server http \u0026{Address::80 TLS:\u003cnil\u003e Redirect:\u003cnil\u003e Auth:\u003cnil\u003e WhitelistSourceRange:[] WhiteList:\u003cnil\u003e Compress:true ProxyProtocol:\u003cnil\u003e ForwardedHeaders:0xc00089d9e0} with readTimeout=0s writeTimeout=0s idleTimeout=3m0s","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Starting provider configuration.ProviderAggregator {}","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Starting server on :443","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Starting server on :9100","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Starting server on :80","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Starting provider *kubernetes.Provider {\"Watch\":true,\"Filename\":\"\",\"Constraints\":[],\"Trace\":false,\"TemplateVersion\":0,\"DebugLogGeneratedTemplate\":false,\"Endpoint\":\"\",\"Token\":\"\",\"CertAuthFilePath\":\"\",\"DisablePassHostHeaders\":false,\"EnablePassTLSCert\":false,\"Namespaces\":null,\"LabelSelector\":\"\",\"IngressClass\":\"\",\"IngressEndpoint\":{\"IP\":\"\",\"Hostname\":\"\",\"PublishedService\":\"kube-system/traefik\"},\"ThrottleDuration\":0}","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"ingress label selector is: \"\"","time":"2020-10-13T07:40:59Z"}
{"level":"info","msg":"Creating in-cluster Provider client","time":"2020-10-13T07:40:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:00Z"}
{"level":"info","msg":"Server configuration reloaded on :80","time":"2020-10-13T07:41:00Z"}
{"level":"info","msg":"Server configuration reloaded on :443","time":"2020-10-13T07:41:00Z"}
{"level":"info","msg":"Server configuration reloaded on :9100","time":"2020-10-13T07:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:41:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:41:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:42:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:42:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:43:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:43:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:44:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:44:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:34Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:34Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:45:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:45:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:03Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:03Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:34Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:34Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:46:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:46:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:47:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:47:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:48:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:48:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:49:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:49:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:34Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:34Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:50:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:50:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:00Z"}
{"level":"warning","msg":"A new release has been found: 2.3.1. Please consider updating.","time":"2020-10-13T07:51:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:51:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:51:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:52:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:52:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:53:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:53:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:03Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:03Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:54:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:54:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:34Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:34Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:55:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:55:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:34Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:56:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:56:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:03Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:03Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:57:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:57:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:58:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:58:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T07:59:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T07:59:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:00:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:00:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:03Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:03Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:01:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:01:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:02:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:02:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:03Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:03Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:03:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:03:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:04:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:04:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:03Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:03Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:05:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:05:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:06:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:06:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:07:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:07:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:08:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:08:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:09:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:09:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:10:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:10:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:11:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:11:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:34Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:12:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:12:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:13:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:13:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:38Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:38Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:40Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:40Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:42Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:42Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:14:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:14:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:15:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:15:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:16:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:16:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:17:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:17:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:18:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:18:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:19:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:19:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:42Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:42Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:20:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:20:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:21:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:21:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:38Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:38Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:40Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:40Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:42Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:42Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:22:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:22:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:23:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:23:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:24:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:24:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:03Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:03Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:25:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:25:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:26:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:26:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:42Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:42Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:27:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:27:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:28:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:28:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:29:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:29:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:30:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:30:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:38Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:38Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:40Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:40Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:31:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:31:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:01Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:01Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:12Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:12Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:14Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:14Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:32:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:32:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:10Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:10Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:33:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:33:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:34:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:34:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:35:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:35:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:33Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:33Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:36:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:36:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:37:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:37:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:38:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:38:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:08Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:08Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:39:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:39:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:40:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:40:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:41:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:41:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:42:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:42:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:04Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:04Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:06Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:06Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:43:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:43:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:16Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:16Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:18Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:18Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:20Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:20Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:22Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:22Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:24Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:24Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:26Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:26Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:28Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:28Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:57Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:57Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:44:59Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:44:59Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:38Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:38Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:40Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:40Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:42Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:42Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:45:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:45:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:46:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:46:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:30Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:30Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:32Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:32Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:42Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:42Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:47:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:47:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:48:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:48:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:47Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:49Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:49Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:51Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:51Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:53Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:53Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:55Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:55Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:49:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:49:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:36Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:36Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:38Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:38Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:40Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:40Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:42Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:42Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:44Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:44Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:50:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:50:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:46Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:46Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:48Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:48Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:50Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:50Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:52Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:52Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:54Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:54Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:56Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:56Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:51:58Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:51:58Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:00Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:00Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:02Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:02Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:05Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:05Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:07Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:07Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:09Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:09Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:11Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:11Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:13Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:13Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:15Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:15Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:17Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:17Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:19Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:19Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:21Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:21Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:23Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:23Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:25Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:25Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:27Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:27Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:29Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:29Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:31Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:31Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:35Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:35Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:37Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:37Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:39Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:39Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:41Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:41Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:43Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:43Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:45Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:45Z"}
{"level":"error","msg":"Service not found for default/vue","time":"2020-10-13T08:52:47Z"}
{"level":"error","msg":"Service not found for default/flask","time":"2020-10-13T08:52:47Z"}
==== END logs for container traefik of pod kube-system/traefik-758cd5fc85-bdpnd ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/events",
        "resourceVersion": "117396"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/replicationcontrollers",
        "resourceVersion": "117396"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/services",
        "resourceVersion": "117396"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                "uid": "359c4226-5b25-440a-9920-0fe385d4d398",
                "resourceVersion": "152",
                "creationTimestamp": "2020-10-09T18:21:04Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                },
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T18:21:04Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:component": {},
                                    "f:provider": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.43.0.1",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "quickstart-es-transport",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/quickstart-es-transport",
                "uid": "2fae5147-a4bb-41c1-889b-83189416eeb7",
                "resourceVersion": "4018",
                "creationTimestamp": "2020-10-09T19:33:45Z",
                "labels": {
                    "common.k8s.elastic.co/type": "elasticsearch",
                    "elasticsearch.k8s.elastic.co/cluster-name": "quickstart"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "elasticsearch.k8s.elastic.co/v1",
                        "kind": "Elasticsearch",
                        "name": "quickstart",
                        "uid": "ad891ff9-1176-438c-a015-6fe141a4e338",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "elastic-operator",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:33:45Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:common.k8s.elastic.co/type": {},
                                    "f:elasticsearch.k8s.elastic.co/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"ad891ff9-1176-438c-a015-6fe141a4e338\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":9300,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:publishNotReadyAddresses": {},
                                "f:selector": {
                                    ".": {},
                                    "f:common.k8s.elastic.co/type": {},
                                    "f:elasticsearch.k8s.elastic.co/cluster-name": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "tls-transport",
                        "protocol": "TCP",
                        "port": 9300,
                        "targetPort": 9300
                    }
                ],
                "selector": {
                    "common.k8s.elastic.co/type": "elasticsearch",
                    "elasticsearch.k8s.elastic.co/cluster-name": "quickstart"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "publishNotReadyAddresses": true
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "quickstart-es-http",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/quickstart-es-http",
                "uid": "8610235c-c605-49af-b37e-2c7ea817e0bf",
                "resourceVersion": "4022",
                "creationTimestamp": "2020-10-09T19:33:45Z",
                "labels": {
                    "common.k8s.elastic.co/type": "elasticsearch",
                    "elasticsearch.k8s.elastic.co/cluster-name": "quickstart"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "elasticsearch.k8s.elastic.co/v1",
                        "kind": "Elasticsearch",
                        "name": "quickstart",
                        "uid": "ad891ff9-1176-438c-a015-6fe141a4e338",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "elastic-operator",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:33:45Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:common.k8s.elastic.co/type": {},
                                    "f:elasticsearch.k8s.elastic.co/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"ad891ff9-1176-438c-a015-6fe141a4e338\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":9200,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:common.k8s.elastic.co/type": {},
                                    "f:elasticsearch.k8s.elastic.co/cluster-name": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 9200,
                        "targetPort": 9200
                    }
                ],
                "selector": {
                    "common.k8s.elastic.co/type": "elasticsearch",
                    "elasticsearch.k8s.elastic.co/cluster-name": "quickstart"
                },
                "clusterIP": "10.43.76.176",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "quickstart-es-default",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/quickstart-es-default",
                "uid": "1ca761fc-d430-4f61-97e0-0bc47c4dbf50",
                "resourceVersion": "4041",
                "creationTimestamp": "2020-10-09T19:33:48Z",
                "labels": {
                    "common.k8s.elastic.co/type": "elasticsearch",
                    "elasticsearch.k8s.elastic.co/cluster-name": "quickstart",
                    "elasticsearch.k8s.elastic.co/statefulset-name": "quickstart-es-default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "elasticsearch.k8s.elastic.co/v1",
                        "kind": "Elasticsearch",
                        "name": "quickstart",
                        "uid": "ad891ff9-1176-438c-a015-6fe141a4e338",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "elastic-operator",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:33:48Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:common.k8s.elastic.co/type": {},
                                    "f:elasticsearch.k8s.elastic.co/cluster-name": {},
                                    "f:elasticsearch.k8s.elastic.co/statefulset-name": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"ad891ff9-1176-438c-a015-6fe141a4e338\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":9200,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:common.k8s.elastic.co/type": {},
                                    "f:elasticsearch.k8s.elastic.co/cluster-name": {},
                                    "f:elasticsearch.k8s.elastic.co/statefulset-name": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 9200,
                        "targetPort": 9200
                    }
                ],
                "selector": {
                    "common.k8s.elastic.co/type": "elasticsearch",
                    "elasticsearch.k8s.elastic.co/cluster-name": "quickstart",
                    "elasticsearch.k8s.elastic.co/statefulset-name": "quickstart-es-default"
                },
                "clusterIP": "None",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "hello-python-service",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/hello-python-service",
                "uid": "60fa82cc-b10c-4168-8dc2-9823ed2b10a7",
                "resourceVersion": "82192",
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"hello-python-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"web\",\"port\":6000,\"protocol\":\"TCP\",\"targetPort\":5000}],\"selector\":{\"app\":\"hello-python\"},\"type\":\"LoadBalancer\"}}\n"
                },
                "managedFields": [
                    {
                        "manager": "kubectl",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-09T19:41:48Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:externalTrafficPolicy": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":6000,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:app": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    },
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:13:13Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:loadBalancer": {
                                    "f:ingress": {}
                                }
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "web",
                        "protocol": "TCP",
                        "port": 6000,
                        "targetPort": 5000,
                        "nodePort": 32280
                    }
                ],
                "selector": {
                    "app": "hello-python"
                },
                "clusterIP": "10.43.41.93",
                "type": "LoadBalancer",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "ip": "10.0.2.15"
                        }
                    ]
                }
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/daemonsets",
        "resourceVersion": "117396"
    },
    "items": [
        {
            "metadata": {
                "name": "svclb-hello-python-service",
                "namespace": "default",
                "selfLink": "/apis/apps/v1/namespaces/default/daemonsets/svclb-hello-python-service",
                "uid": "209c4a53-023b-4d10-aa30-1b3ca52b51c1",
                "resourceVersion": "112425",
                "generation": 1,
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "labels": {
                    "objectset.rio.cattle.io/hash": "d5b5d3073b8c5ac9a1f619dfcc134853b84dd76f",
                    "svccontroller.k3s.cattle.io/nodeselector": "false"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "objectset.rio.cattle.io/applied": "H4sIAAAAAAAA/4xUwW7jNhD9lWLOlCLZjuMI6GGR5BC06xi2t5cgCEbkKGZNkQI5UmMY+veCcjZxFmvvHjV88zh872n2sNVWQQG3SLWzK2IQgI3+h3zQzkIB2DThostBQE2MChmh2IPFmqCA0ElTJhsyxiXNjjfOJoF8pyWBGDChQRmBiipsTSSXnpC1s2tdU2CsGyhsa4wAgyWZEMld+S9JDsSp1y6VyGwo1e5ig2ETuS7LSzXOrsblTF6ivMa8mubXqpIyH09ml+NyNlHqalqBiPNJZ9k7Y8in23E4YrNOUSBDkp2HAio0gaAXgNY6HkY8O4xWh/d/8IM4CXb/WfLJS7eFAi66XPzxl7bqz9W7VOf73sQ+IfOve380oRcwHC6pIk9WUoDicf/Z9sHxt2ysPll6epJ20GSaVTgbSZmUeSaTST6dJTMlR8n1bDQmNSrzDK9iDj50K9i31D/1AkJDMor+4cseamS5+fs9HNg054PX9wKY6sYg09B/FNvfCN8v+c+nKnTynEj90SMjB2pL/iD/W5spk8Z5TqZZloEAXeNLLHu0ckP+Ymt005BPTFl0WZqnIxAQ8ec4Ni7wwnmGIhbEx8XHxcY7dtIZKGB9s4D+SQDZ7ph1tbx5Xjws1yCgQ9PS4HWWQS/eIbd3q/XzYvmwfjgCDXQ/Yn6D535xhMizdDJOJ3l6PR5m8xRc64fo7vs3mRatMQtntNxBAffV3PHCUyAb104g2XrNuxtnmV550B8bLLXRrOngvFJQPML8bv385fbr/Rye+j5exc6Q/74QHvewpcgf14d3htJtW5K3xBSi/zUGPqyCJjYNq+XuVQcOIICqiiRDAXO3khtSraHh1QfGG69ZSzRflHI2PFiz+ylN/xRD1DYKmVbskellF8fnXROFWjpjtH35NpyDAP/pe/ifXr9Z7FAbLA1BkfdDKBm5HWSQrfdked7WJfnvYyooMgF2qH3VIXwqKwrakzrdsSRUOyiyvv8/AAD///q9x6FwBgAA",
                    "objectset.rio.cattle.io/id": "svccontroller",
                    "objectset.rio.cattle.io/owner-gvk": "/v1, Kind=Service",
                    "objectset.rio.cattle.io/owner-name": "hello-python-service",
                    "objectset.rio.cattle.io/owner-namespace": "default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "name": "hello-python-service",
                        "uid": "60fa82cc-b10c-4168-8dc2-9823ed2b10a7",
                        "controller": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-13T07:39:37Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deprecated.daemonset.template.generation": {},
                                    "f:objectset.rio.cattle.io/applied": {},
                                    "f:objectset.rio.cattle.io/id": {},
                                    "f:objectset.rio.cattle.io/owner-gvk": {},
                                    "f:objectset.rio.cattle.io/owner-name": {},
                                    "f:objectset.rio.cattle.io/owner-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:objectset.rio.cattle.io/hash": {},
                                    "f:svccontroller.k3s.cattle.io/nodeselector": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"60fa82cc-b10c-4168-8dc2-9823ed2b10a7\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:svccontroller.k3s.cattle.io/svcname": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"lb-port-6000\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"DEST_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEST_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEST_PROTO\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SRC_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":6000,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:hostPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {}
                                    }
                                },
                                "f:updateStrategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                }
                            },
                            "f:status": {
                                "f:currentNumberScheduled": {},
                                "f:desiredNumberScheduled": {},
                                "f:numberAvailable": {},
                                "f:numberMisscheduled": {},
                                "f:numberReady": {},
                                "f:observedGeneration": {},
                                "f:updatedNumberScheduled": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "svclb-hello-python-service"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "svclb-hello-python-service",
                            "svccontroller.k3s.cattle.io/svcname": "hello-python-service"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "lb-port-6000",
                                "image": "rancher/klipper-lb:v0.1.2",
                                "ports": [
                                    {
                                        "name": "lb-port-6000",
                                        "hostPort": 6000,
                                        "containerPort": 6000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "SRC_PORT",
                                        "value": "6000"
                                    },
                                    {
                                        "name": "DEST_PROTO",
                                        "value": "TCP"
                                    },
                                    {
                                        "name": "DEST_PORT",
                                        "value": "6000"
                                    },
                                    {
                                        "name": "DEST_IP",
                                        "value": "10.43.41.93"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "noderole.kubernetes.io/master",
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/deployments",
        "resourceVersion": "117396"
    },
    "items": [
        {
            "metadata": {
                "name": "frontend",
                "namespace": "default",
                "selfLink": "/apis/apps/v1/namespaces/default/deployments/frontend",
                "uid": "89ec0fc8-131b-40e2-85f7-fe8d81b109d7",
                "resourceVersion": "82389",
                "generation": 1,
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"frontend\",\"namespace\":\"default\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"ghcr.io/thejaysmith/myfrontend:v1\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":8080}]}]}}}}\n"
                },
                "managedFields": [
                    {
                        "manager": "kubectl",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-09T19:41:48Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"frontend\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-12T15:14:17Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 3,
                "selector": {
                    "matchLabels": {
                        "app": "frontend"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "frontend"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "frontend",
                                "image": "ghcr.io/thejaysmith/myfrontend:v1",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 3,
                "updatedReplicas": 3,
                "readyReplicas": 3,
                "availableReplicas": 3,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2020-10-09T19:43:44Z",
                        "lastTransitionTime": "2020-10-09T19:41:48Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"frontend-d998d8c49\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2020-10-12T15:14:17Z",
                        "lastTransitionTime": "2020-10-12T15:14:17Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "hello-python",
                "namespace": "default",
                "selfLink": "/apis/apps/v1/namespaces/default/deployments/hello-python",
                "uid": "1d4d2f3f-f09e-4928-ab2b-e5548600ebbd",
                "resourceVersion": "82623",
                "generation": 1,
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"hello-python\",\"namespace\":\"default\"},\"spec\":{\"replicas\":4,\"selector\":{\"matchLabels\":{\"app\":\"hello-python\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"hello-python\"}},\"spec\":{\"containers\":[{\"image\":\"ghcr.io/thejaysmith/helloflask:v1\",\"imagePullPolicy\":\"Always\",\"name\":\"hello-python\",\"ports\":[{\"containerPort\":5000}]}]}}}}\n"
                },
                "managedFields": [
                    {
                        "manager": "kubectl",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-09T19:41:48Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"hello-python\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-12T15:16:36Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 4,
                "selector": {
                    "matchLabels": {
                        "app": "hello-python"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "hello-python"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "hello-python",
                                "image": "ghcr.io/thejaysmith/helloflask:v1",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 4,
                "updatedReplicas": 4,
                "readyReplicas": 4,
                "availableReplicas": 4,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2020-10-09T19:46:07Z",
                        "lastTransitionTime": "2020-10-09T19:41:49Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"hello-python-56566f55bc\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2020-10-12T15:16:34Z",
                        "lastTransitionTime": "2020-10-12T15:16:34Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/replicasets",
        "resourceVersion": "117396"
    },
    "items": [
        {
            "metadata": {
                "name": "frontend-d998d8c49",
                "namespace": "default",
                "selfLink": "/apis/apps/v1/namespaces/default/replicasets/frontend-d998d8c49",
                "uid": "6d366a88-4682-477f-ad06-718ec02906c9",
                "resourceVersion": "82387",
                "generation": 1,
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "labels": {
                    "app": "frontend",
                    "pod-template-hash": "d998d8c49"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "3",
                    "deployment.kubernetes.io/max-replicas": "4",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "frontend",
                        "uid": "89ec0fc8-131b-40e2-85f7-fe8d81b109d7",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-12T15:14:17Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"89ec0fc8-131b-40e2-85f7-fe8d81b109d7\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:pod-template-hash": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:pod-template-hash": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"frontend\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 3,
                "selector": {
                    "matchLabels": {
                        "app": "frontend",
                        "pod-template-hash": "d998d8c49"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "frontend",
                            "pod-template-hash": "d998d8c49"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "frontend",
                                "image": "ghcr.io/thejaysmith/myfrontend:v1",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 3,
                "fullyLabeledReplicas": 3,
                "readyReplicas": 3,
                "availableReplicas": 3,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "hello-python-56566f55bc",
                "namespace": "default",
                "selfLink": "/apis/apps/v1/namespaces/default/replicasets/hello-python-56566f55bc",
                "uid": "3a1f7065-180c-4d2b-a43f-11f74896d4df",
                "resourceVersion": "82619",
                "generation": 1,
                "creationTimestamp": "2020-10-09T19:41:49Z",
                "labels": {
                    "app": "hello-python",
                    "pod-template-hash": "56566f55bc"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "4",
                    "deployment.kubernetes.io/max-replicas": "5",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "hello-python",
                        "uid": "1d4d2f3f-f09e-4928-ab2b-e5548600ebbd",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2020-10-12T15:16:36Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"1d4d2f3f-f09e-4928-ab2b-e5548600ebbd\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:pod-template-hash": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:pod-template-hash": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"hello-python\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 4,
                "selector": {
                    "matchLabels": {
                        "app": "hello-python",
                        "pod-template-hash": "56566f55bc"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "hello-python",
                            "pod-template-hash": "56566f55bc"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "hello-python",
                                "image": "ghcr.io/thejaysmith/helloflask:v1",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 4,
                "fullyLabeledReplicas": 4,
                "readyReplicas": 4,
                "availableReplicas": 4,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/pods",
        "resourceVersion": "117396"
    },
    "items": [
        {
            "metadata": {
                "name": "frontend-d998d8c49-2k5rq",
                "generateName": "frontend-d998d8c49-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/frontend-d998d8c49-2k5rq",
                "uid": "c437cb7a-6109-4c25-824a-f551b46a3ae2",
                "resourceVersion": "82109",
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "labels": {
                    "app": "frontend",
                    "pod-template-hash": "d998d8c49"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "frontend-d998d8c49",
                        "uid": "6d366a88-4682-477f-ad06-718ec02906c9",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:13:00Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"6d366a88-4682-477f-ad06-718ec02906c9\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"frontend\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.93\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "frontend",
                        "image": "ghcr.io/thejaysmith/myfrontend:v1",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:48Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:13:00Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:13:00Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:48Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.93",
                "podIPs": [
                    {
                        "ip": "10.42.0.93"
                    }
                ],
                "startTime": "2020-10-09T19:41:48Z",
                "containerStatuses": [
                    {
                        "name": "frontend",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:12:44Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2020-10-12T10:15:13Z",
                                "finishedAt": "2020-10-12T15:11:51Z",
                                "containerID": "containerd://2975b53630e1b09953b33b9b029836ab42b22222748e9705fdaca98a6bc8fb02"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "ghcr.io/thejaysmith/myfrontend:v1",
                        "imageID": "ghcr.io/thejaysmith/myfrontend@sha256:320d0b8bb7968ad394b583738698a013bbc719ac7e004ae6dd18237fe0a05474",
                        "containerID": "containerd://833015bb0164bd1b86342a8f3774607f385bd4196c5ef3452271a92f6851636b",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "svclb-hello-python-service-5wvlk",
                "generateName": "svclb-hello-python-service-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/svclb-hello-python-service-5wvlk",
                "uid": "f4728eb0-eaf9-4700-a192-3db367cdc13d",
                "resourceVersion": "82185",
                "creationTimestamp": "2020-10-09T19:41:49Z",
                "labels": {
                    "app": "svclb-hello-python-service",
                    "controller-revision-hash": "7544d68f58",
                    "pod-template-generation": "1",
                    "svccontroller.k3s.cattle.io/svcname": "hello-python-service"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "svclb-hello-python-service",
                        "uid": "209c4a53-023b-4d10-aa30-1b3ca52b51c1",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:13:12Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:controller-revision-hash": {},
                                    "f:pod-template-generation": {},
                                    "f:svccontroller.k3s.cattle.io/svcname": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"209c4a53-023b-4d10-aa30-1b3ca52b51c1\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"lb-port-6000\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DEST_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEST_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEST_PROTO\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"SRC_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":6000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:hostPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.92\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "lb-port-6000",
                        "image": "rancher/klipper-lb:v0.1.2",
                        "ports": [
                            {
                                "name": "lb-port-6000",
                                "hostPort": 6000,
                                "containerPort": 6000,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "SRC_PORT",
                                "value": "6000"
                            },
                            {
                                "name": "DEST_PROTO",
                                "value": "TCP"
                            },
                            {
                                "name": "DEST_PORT",
                                "value": "6000"
                            },
                            {
                                "name": "DEST_IP",
                                "value": "10.43.41.93"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "localhost"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "noderole.kubernetes.io/master",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:49Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:13:11Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:13:11Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:49Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.92",
                "podIPs": [
                    {
                        "ip": "10.42.0.92"
                    }
                ],
                "startTime": "2020-10-09T19:41:49Z",
                "containerStatuses": [
                    {
                        "name": "lb-port-6000",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:12:43Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2020-10-12T10:15:35Z",
                                "finishedAt": "2020-10-12T15:11:51Z",
                                "containerID": "containerd://266f0e47cd50b02ad8c45ed5138730db9a80df40a92d55e14e91a739c8bd9329"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "docker.io/rancher/klipper-lb:v0.1.2",
                        "imageID": "docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a",
                        "containerID": "containerd://6f4d8b0a0714593027e33b3e957bb0c7cdf3f694fe8cef2b7efc2c7162a1984b",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "frontend-d998d8c49-sgvlf",
                "generateName": "frontend-d998d8c49-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/frontend-d998d8c49-sgvlf",
                "uid": "1612e778-67a9-496a-943a-621bd5834cde",
                "resourceVersion": "82210",
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "labels": {
                    "app": "frontend",
                    "pod-template-hash": "d998d8c49"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "frontend-d998d8c49",
                        "uid": "6d366a88-4682-477f-ad06-718ec02906c9",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:13:14Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"6d366a88-4682-477f-ad06-718ec02906c9\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"frontend\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.87\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "frontend",
                        "image": "ghcr.io/thejaysmith/myfrontend:v1",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:48Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:13:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:13:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:48Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.87",
                "podIPs": [
                    {
                        "ip": "10.42.0.87"
                    }
                ],
                "startTime": "2020-10-09T19:41:48Z",
                "containerStatuses": [
                    {
                        "name": "frontend",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:12:46Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2020-10-12T10:15:14Z",
                                "finishedAt": "2020-10-12T15:11:51Z",
                                "containerID": "containerd://4bf71239226bbd95d0ebd6d3fd67d9b05036003ba97ba114b4fb62712b5ad705"
                            }
                        },
                        "ready": true,
                        "restartCount": 3,
                        "image": "ghcr.io/thejaysmith/myfrontend:v1",
                        "imageID": "ghcr.io/thejaysmith/myfrontend@sha256:320d0b8bb7968ad394b583738698a013bbc719ac7e004ae6dd18237fe0a05474",
                        "containerID": "containerd://946c2510047740230e16753bebca4b0940ed328db02c5052f118814d8195950b",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "frontend-d998d8c49-nzvbp",
                "generateName": "frontend-d998d8c49-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/frontend-d998d8c49-nzvbp",
                "uid": "004cc1b5-3207-4698-a195-b6fd8defc0e9",
                "resourceVersion": "82386",
                "creationTimestamp": "2020-10-09T19:41:48Z",
                "labels": {
                    "app": "frontend",
                    "pod-template-hash": "d998d8c49"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "frontend-d998d8c49",
                        "uid": "6d366a88-4682-477f-ad06-718ec02906c9",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:14:17Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"6d366a88-4682-477f-ad06-718ec02906c9\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"frontend\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.97\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "frontend",
                        "image": "ghcr.io/thejaysmith/myfrontend:v1",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:48Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:14:17Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:14:17Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:48Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.97",
                "podIPs": [
                    {
                        "ip": "10.42.0.97"
                    }
                ],
                "startTime": "2020-10-09T19:41:48Z",
                "containerStatuses": [
                    {
                        "name": "frontend",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:14:17Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 4,
                        "image": "ghcr.io/thejaysmith/myfrontend:v1",
                        "imageID": "ghcr.io/thejaysmith/myfrontend@sha256:320d0b8bb7968ad394b583738698a013bbc719ac7e004ae6dd18237fe0a05474",
                        "containerID": "containerd://0d7b5cce346d436fd0e6f04f41fd4d0d742160f9ece3f805d827c107f71ef781",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "hello-python-56566f55bc-8czdx",
                "generateName": "hello-python-56566f55bc-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/hello-python-56566f55bc-8czdx",
                "uid": "6bd0e9c1-09d4-4b67-93bb-09307fc3eb25",
                "resourceVersion": "82577",
                "creationTimestamp": "2020-10-09T19:41:50Z",
                "labels": {
                    "app": "hello-python",
                    "pod-template-hash": "56566f55bc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "hello-python-56566f55bc",
                        "uid": "3a1f7065-180c-4d2b-a43f-11f74896d4df",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:16:29Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"3a1f7065-180c-4d2b-a43f-11f74896d4df\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"hello-python\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.86\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "hello-python",
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:28Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:28Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:50Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.86",
                "podIPs": [
                    {
                        "ip": "10.42.0.86"
                    }
                ],
                "startTime": "2020-10-09T19:41:51Z",
                "containerStatuses": [
                    {
                        "name": "hello-python",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:16:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 4,
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "imageID": "ghcr.io/thejaysmith/helloflask@sha256:85f36f806e47114c797b13b028cc63d9ffe68f95a3f42601420eae6fdd1adf07",
                        "containerID": "containerd://4b36424b8d81bfd910c77e68d7707bcf3797dbd21f648c5eff34c3d6eaf6337c",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "hello-python-56566f55bc-6nk88",
                "generateName": "hello-python-56566f55bc-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/hello-python-56566f55bc-6nk88",
                "uid": "69f232c3-8bfb-4ebf-9822-cd23091e58d7",
                "resourceVersion": "82596",
                "creationTimestamp": "2020-10-09T19:41:49Z",
                "labels": {
                    "app": "hello-python",
                    "pod-template-hash": "56566f55bc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "hello-python-56566f55bc",
                        "uid": "3a1f7065-180c-4d2b-a43f-11f74896d4df",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:16:32Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"3a1f7065-180c-4d2b-a43f-11f74896d4df\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"hello-python\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.85\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "hello-python",
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:30Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:30Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:50Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.85",
                "podIPs": [
                    {
                        "ip": "10.42.0.85"
                    }
                ],
                "startTime": "2020-10-09T19:41:51Z",
                "containerStatuses": [
                    {
                        "name": "hello-python",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:16:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 5,
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "imageID": "ghcr.io/thejaysmith/helloflask@sha256:85f36f806e47114c797b13b028cc63d9ffe68f95a3f42601420eae6fdd1adf07",
                        "containerID": "containerd://f22d70b65f81fdec1d61da1e3012bf91dd3e0a163013a8aa8abc4b88d0a2a77d",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "hello-python-56566f55bc-h4x54",
                "generateName": "hello-python-56566f55bc-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/hello-python-56566f55bc-h4x54",
                "uid": "885dd62d-c9e1-4e24-90b8-2c58805771b9",
                "resourceVersion": "82607",
                "creationTimestamp": "2020-10-09T19:41:49Z",
                "labels": {
                    "app": "hello-python",
                    "pod-template-hash": "56566f55bc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "hello-python-56566f55bc",
                        "uid": "3a1f7065-180c-4d2b-a43f-11f74896d4df",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:16:33Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"3a1f7065-180c-4d2b-a43f-11f74896d4df\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"hello-python\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.83\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "hello-python",
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:50Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:32Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:32Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:49Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.83",
                "podIPs": [
                    {
                        "ip": "10.42.0.83"
                    }
                ],
                "startTime": "2020-10-09T19:41:50Z",
                "containerStatuses": [
                    {
                        "name": "hello-python",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:16:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 4,
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "imageID": "ghcr.io/thejaysmith/helloflask@sha256:85f36f806e47114c797b13b028cc63d9ffe68f95a3f42601420eae6fdd1adf07",
                        "containerID": "containerd://aeb79a122892271c92a22b8e8a17ba4fa88845c7b784fdd0fa281f27e93db051",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "hello-python-56566f55bc-r2gsr",
                "generateName": "hello-python-56566f55bc-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/hello-python-56566f55bc-r2gsr",
                "uid": "36bc91a4-1a3b-4d49-8d51-72065f7a490b",
                "resourceVersion": "82617",
                "creationTimestamp": "2020-10-09T19:41:49Z",
                "labels": {
                    "app": "hello-python",
                    "pod-template-hash": "56566f55bc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "hello-python-56566f55bc",
                        "uid": "3a1f7065-180c-4d2b-a43f-11f74896d4df",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "k3s",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2020-10-12T15:16:35Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"3a1f7065-180c-4d2b-a43f-11f74896d4df\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"hello-python\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            },
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.42.0.90\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-c62b4",
                        "secret": {
                            "secretName": "default-token-c62b4",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "hello-python",
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "default-token-c62b4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:33Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-12T15:16:33Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:41:50Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.90",
                "podIPs": [
                    {
                        "ip": "10.42.0.90"
                    }
                ],
                "startTime": "2020-10-09T19:41:51Z",
                "containerStatuses": [
                    {
                        "name": "hello-python",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:16:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 5,
                        "image": "ghcr.io/thejaysmith/helloflask:v1",
                        "imageID": "ghcr.io/thejaysmith/helloflask@sha256:85f36f806e47114c797b13b028cc63d9ffe68f95a3f42601420eae6fdd1adf07",
                        "containerID": "containerd://82b2b9f2f99f05d75d9629a8fef19b9b1fd8e6427155a26c47cfcbdce22486fe",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "quickstart-es-default-0",
                "generateName": "quickstart-es-default-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/quickstart-es-default-0",
                "uid": "5e11f6fd-ad48-4d47-b4d0-d8d5545e47a2",
                "resourceVersion": "112542",
                "creationTimestamp": "2020-10-09T19:33:48Z",
                "labels": {
                    "common.k8s.elastic.co/type": "elasticsearch",
                    "controller-revision-hash": "quickstart-es-default-58bb68d67",
                    "elasticsearch.k8s.elastic.co/cluster-name": "quickstart",
                    "elasticsearch.k8s.elastic.co/config-hash": "178912897",
                    "elasticsearch.k8s.elastic.co/http-scheme": "https",
                    "elasticsearch.k8s.elastic.co/node-data": "true",
                    "elasticsearch.k8s.elastic.co/node-ingest": "true",
                    "elasticsearch.k8s.elastic.co/node-master": "true",
                    "elasticsearch.k8s.elastic.co/node-ml": "true",
                    "elasticsearch.k8s.elastic.co/statefulset-name": "quickstart-es-default",
                    "elasticsearch.k8s.elastic.co/version": "7.9.1",
                    "statefulset.kubernetes.io/pod-name": "quickstart-es-default-0"
                },
                "annotations": {
                    "co.elastic.logs/module": "elasticsearch",
                    "update.k8s.elastic.co/timestamp": "2020-10-12T15:13:17.672251627Z"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "StatefulSet",
                        "name": "quickstart-es-default",
                        "uid": "c9ff7894-f716-4782-b599-0d8a32214705",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "elasticsearch-data",
                        "persistentVolumeClaim": {
                            "claimName": "elasticsearch-data-quickstart-es-default-0"
                        }
                    },
                    {
                        "name": "downward-api",
                        "downwardAPI": {
                            "items": [
                                {
                                    "path": "labels",
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.labels"
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "elastic-internal-elasticsearch-bin-local",
                        "emptyDir": {}
                    },
                    {
                        "name": "elastic-internal-elasticsearch-config",
                        "secret": {
                            "secretName": "quickstart-es-default-es-config",
                            "defaultMode": 420,
                            "optional": false
                        }
                    },
                    {
                        "name": "elastic-internal-elasticsearch-config-local",
                        "emptyDir": {}
                    },
                    {
                        "name": "elastic-internal-elasticsearch-plugins-local",
                        "emptyDir": {}
                    },
                    {
                        "name": "elastic-internal-http-certificates",
                        "secret": {
                            "secretName": "quickstart-es-http-certs-internal",
                            "defaultMode": 420,
                            "optional": false
                        }
                    },
                    {
                        "name": "elastic-internal-probe-user",
                        "secret": {
                            "secretName": "quickstart-es-internal-users",
                            "items": [
                                {
                                    "key": "elastic-internal-probe",
                                    "path": "elastic-internal-probe"
                                }
                            ],
                            "defaultMode": 420,
                            "optional": false
                        }
                    },
                    {
                        "name": "elastic-internal-remote-certificate-authorities",
                        "secret": {
                            "secretName": "quickstart-es-remote-ca",
                            "defaultMode": 420,
                            "optional": false
                        }
                    },
                    {
                        "name": "elastic-internal-scripts",
                        "configMap": {
                            "name": "quickstart-es-scripts",
                            "defaultMode": 493,
                            "optional": false
                        }
                    },
                    {
                        "name": "elastic-internal-transport-certificates",
                        "secret": {
                            "secretName": "quickstart-es-transport-certificates",
                            "defaultMode": 420,
                            "optional": false
                        }
                    },
                    {
                        "name": "elastic-internal-unicast-hosts",
                        "configMap": {
                            "name": "quickstart-es-unicast-hosts",
                            "defaultMode": 420,
                            "optional": false
                        }
                    },
                    {
                        "name": "elastic-internal-xpack-file-realm",
                        "secret": {
                            "secretName": "quickstart-es-xpack-file-realm",
                            "defaultMode": 420,
                            "optional": false
                        }
                    },
                    {
                        "name": "elasticsearch-logs",
                        "emptyDir": {}
                    }
                ],
                "initContainers": [
                    {
                        "name": "elastic-internal-init-filesystem",
                        "image": "docker.elastic.co/elasticsearch/elasticsearch:7.9.1",
                        "command": [
                            "bash",
                            "-c",
                            "/mnt/elastic-internal/scripts/prepare-fs.sh"
                        ],
                        "env": [
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "elastic-internal-elasticsearch-config-local",
                                "mountPath": "/mnt/elastic-internal/elasticsearch-config-local"
                            },
                            {
                                "name": "elastic-internal-elasticsearch-plugins-local",
                                "mountPath": "/mnt/elastic-internal/elasticsearch-plugins-local"
                            },
                            {
                                "name": "elastic-internal-elasticsearch-bin-local",
                                "mountPath": "/mnt/elastic-internal/elasticsearch-bin-local"
                            },
                            {
                                "name": "elastic-internal-transport-certificates",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/transport-certificates"
                            },
                            {
                                "name": "elastic-internal-scripts",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/scripts"
                            },
                            {
                                "name": "elasticsearch-data",
                                "mountPath": "/usr/share/elasticsearch/data"
                            },
                            {
                                "name": "elasticsearch-logs",
                                "mountPath": "/usr/share/elasticsearch/logs"
                            },
                            {
                                "name": "downward-api",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/downward-api"
                            },
                            {
                                "name": "elastic-internal-elasticsearch-config",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/elasticsearch-config"
                            },
                            {
                                "name": "elastic-internal-http-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/elasticsearch/config/http-certs"
                            },
                            {
                                "name": "elastic-internal-probe-user",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/probe-user"
                            },
                            {
                                "name": "elastic-internal-remote-certificate-authorities",
                                "readOnly": true,
                                "mountPath": "/usr/share/elasticsearch/config/transport-remote-certs/"
                            },
                            {
                                "name": "elastic-internal-unicast-hosts",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/unicast-hosts"
                            },
                            {
                                "name": "elastic-internal-xpack-file-realm",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/xpack-file-realm"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": false
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "elasticsearch",
                        "image": "docker.elastic.co/elasticsearch/elasticsearch:7.9.1",
                        "ports": [
                            {
                                "name": "https",
                                "containerPort": 9200,
                                "protocol": "TCP"
                            },
                            {
                                "name": "transport",
                                "containerPort": 9300,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "PROBE_PASSWORD_PATH",
                                "value": "/mnt/elastic-internal/probe-user/elastic-internal-probe"
                            },
                            {
                                "name": "PROBE_USERNAME",
                                "value": "elastic-internal-probe"
                            },
                            {
                                "name": "READINESS_PROBE_PROTOCOL",
                                "value": "https"
                            },
                            {
                                "name": "HEADLESS_SERVICE_NAME",
                                "value": "quickstart-es-default"
                            },
                            {
                                "name": "NSS_SDB_USE_CACHE",
                                "value": "no"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "2Gi"
                            },
                            "requests": {
                                "memory": "2Gi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "downward-api",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/downward-api"
                            },
                            {
                                "name": "elastic-internal-elasticsearch-bin-local",
                                "mountPath": "/usr/share/elasticsearch/bin"
                            },
                            {
                                "name": "elastic-internal-elasticsearch-config",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/elasticsearch-config"
                            },
                            {
                                "name": "elastic-internal-elasticsearch-config-local",
                                "mountPath": "/usr/share/elasticsearch/config"
                            },
                            {
                                "name": "elastic-internal-elasticsearch-plugins-local",
                                "mountPath": "/usr/share/elasticsearch/plugins"
                            },
                            {
                                "name": "elastic-internal-http-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/elasticsearch/config/http-certs"
                            },
                            {
                                "name": "elastic-internal-probe-user",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/probe-user"
                            },
                            {
                                "name": "elastic-internal-remote-certificate-authorities",
                                "readOnly": true,
                                "mountPath": "/usr/share/elasticsearch/config/transport-remote-certs/"
                            },
                            {
                                "name": "elastic-internal-scripts",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/scripts"
                            },
                            {
                                "name": "elastic-internal-transport-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/elasticsearch/config/transport-certs"
                            },
                            {
                                "name": "elastic-internal-unicast-hosts",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/unicast-hosts"
                            },
                            {
                                "name": "elastic-internal-xpack-file-realm",
                                "readOnly": true,
                                "mountPath": "/mnt/elastic-internal/xpack-file-realm"
                            },
                            {
                                "name": "elasticsearch-data",
                                "mountPath": "/usr/share/elasticsearch/data"
                            },
                            {
                                "name": "elasticsearch-logs",
                                "mountPath": "/usr/share/elasticsearch/logs"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                ]
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "bash",
                                        "-c",
                                        "/mnt/elastic-internal/scripts/pre-stop-hook-script.sh"
                                    ]
                                }
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 180,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "automountServiceAccountToken": false,
                "nodeName": "localhost",
                "securityContext": {},
                "hostname": "quickstart-es-default-0",
                "subdomain": "quickstart-es-default",
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "elasticsearch.k8s.elastic.co/cluster-name": "quickstart"
                                        }
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-10T19:13:55Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:39:59Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-13T07:39:59Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-10-09T19:33:56Z"
                    }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.42.0.96",
                "podIPs": [
                    {
                        "ip": "10.42.0.96"
                    }
                ],
                "startTime": "2020-10-09T19:33:57Z",
                "initContainerStatuses": [
                    {
                        "name": "elastic-internal-init-filesystem",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2020-10-12T15:12:46Z",
                                "finishedAt": "2020-10-12T15:12:51Z",
                                "containerID": "containerd://966b2449adb4a77d0ceb7a0c7fe3a378ad1421fc7520e3f4b76f7c8133501654"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 3,
                        "image": "docker.elastic.co/elasticsearch/elasticsearch:7.9.1",
                        "imageID": "docker.elastic.co/elasticsearch/elasticsearch@sha256:0a5308431aee029636858a6efe07e409fa699b02549a78d7904eb931b8c46920",
                        "containerID": "containerd://966b2449adb4a77d0ceb7a0c7fe3a378ad1421fc7520e3f4b76f7c8133501654"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "elasticsearch",
                        "state": {
                            "running": {
                                "startedAt": "2020-10-12T15:13:13Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2020-10-12T10:15:20Z",
                                "finishedAt": "2020-10-12T15:11:51Z",
                                "containerID": "containerd://05bd34a0bc967fcfd2b45caa110e483fb66cb8309fb24de522e25dc52519a5db"
                            }
                        },
                        "ready": true,
                        "restartCount": 3,
                        "image": "docker.elastic.co/elasticsearch/elasticsearch:7.9.1",
                        "imageID": "docker.elastic.co/elasticsearch/elasticsearch@sha256:0a5308431aee029636858a6efe07e409fa699b02549a78d7904eb931b8c46920",
                        "containerID": "containerd://71c9d2c91e109f1d6deea8ef296f5797b211ac11d279e6f7db05f6ce396a0436",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container frontend of pod default/frontend-d998d8c49-2k5rq ====
[2020-10-12 15:16:40 +0000] [1] [INFO] Starting gunicorn 20.0.4
[2020-10-12 15:16:40 +0000] [1] [INFO] Listening at: http://0.0.0.0:8080 (1)
[2020-10-12 15:16:40 +0000] [1] [INFO] Using worker: sync
[2020-10-12 15:16:40 +0000] [9] [INFO] Booting worker with pid: 9
[2020-10-12 15:16:40 +0000] [10] [INFO] Booting worker with pid: 10
[2020-10-12 15:16:41 +0000] [11] [INFO] Booting worker with pid: 11
[2020-10-12 15:16:41 +0000] [12] [INFO] Booting worker with pid: 12
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:9)
[2020-10-13 05:32:50 +0000] [9] [INFO] Worker exiting (pid: 9)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:10)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:11)
[2020-10-13 05:32:50 +0000] [11] [INFO] Worker exiting (pid: 11)
[2020-10-13 05:32:50 +0000] [10] [INFO] Worker exiting (pid: 10)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:12)
[2020-10-13 05:32:50 +0000] [12] [INFO] Worker exiting (pid: 12)
[2020-10-13 05:32:52 +0000] [13] [INFO] Booting worker with pid: 13
[2020-10-13 05:32:52 +0000] [14] [INFO] Booting worker with pid: 14
[2020-10-13 05:32:52 +0000] [15] [INFO] Booting worker with pid: 15
[2020-10-13 05:32:52 +0000] [16] [INFO] Booting worker with pid: 16
[2020-10-13 05:33:22 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:13)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:14)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:15)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:16)
[2020-10-13 05:33:23 +0000] [14] [INFO] Worker exiting (pid: 14)
[2020-10-13 05:33:23 +0000] [16] [INFO] Worker exiting (pid: 16)
[2020-10-13 05:33:23 +0000] [15] [INFO] Worker exiting (pid: 15)
[2020-10-13 05:33:23 +0000] [13] [INFO] Worker exiting (pid: 13)
[2020-10-13 05:33:25 +0000] [17] [INFO] Booting worker with pid: 17
[2020-10-13 05:33:26 +0000] [18] [INFO] Booting worker with pid: 18
[2020-10-13 05:33:26 +0000] [19] [INFO] Booting worker with pid: 19
[2020-10-13 05:33:26 +0000] [20] [INFO] Booting worker with pid: 20
==== END logs for container frontend of pod default/frontend-d998d8c49-2k5rq ====
==== START logs for container lb-port-6000 of pod default/svclb-hello-python-service-5wvlk ====
+ trap exit TERM INT
/usr/bin/entry: line 6: can't create /proc/sys/net/ipv4/ip_forward: Read-only file system
+ echo 1
+ true
+ cat /proc/sys/net/ipv4/ip_forward
+ '[' 1 '!=' 1 ]
+ iptables -t nat -I PREROUTING '!' -s 10.43.41.93/32 -p TCP --dport 6000 -j DNAT --to 10.43.41.93:6000
+ iptables -t nat -I POSTROUTING -d 10.43.41.93/32 -p TCP -j MASQUERADE
+ '[' '!' -e /pause ]
+ mkfifo /pause
==== END logs for container lb-port-6000 of pod default/svclb-hello-python-service-5wvlk ====
==== START logs for container frontend of pod default/frontend-d998d8c49-sgvlf ====
[2020-10-12 15:16:40 +0000] [1] [INFO] Starting gunicorn 20.0.4
[2020-10-12 15:16:40 +0000] [1] [INFO] Listening at: http://0.0.0.0:8080 (1)
[2020-10-12 15:16:40 +0000] [1] [INFO] Using worker: sync
[2020-10-12 15:16:40 +0000] [10] [INFO] Booting worker with pid: 10
[2020-10-12 15:16:40 +0000] [9] [INFO] Booting worker with pid: 9
[2020-10-12 15:16:40 +0000] [11] [INFO] Booting worker with pid: 11
[2020-10-12 15:16:41 +0000] [12] [INFO] Booting worker with pid: 12
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:9)
[2020-10-13 05:32:50 +0000] [9] [INFO] Worker exiting (pid: 9)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:10)
[2020-10-13 05:32:50 +0000] [10] [INFO] Worker exiting (pid: 10)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:11)
[2020-10-13 05:32:50 +0000] [11] [INFO] Worker exiting (pid: 11)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:12)
[2020-10-13 05:32:50 +0000] [12] [INFO] Worker exiting (pid: 12)
[2020-10-13 05:32:52 +0000] [14] [INFO] Booting worker with pid: 14
[2020-10-13 05:32:52 +0000] [13] [INFO] Booting worker with pid: 13
[2020-10-13 05:32:52 +0000] [15] [INFO] Booting worker with pid: 15
[2020-10-13 05:32:57 +0000] [16] [INFO] Booting worker with pid: 16
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:13)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:14)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:15)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:16)
[2020-10-13 05:33:23 +0000] [14] [INFO] Worker exiting (pid: 14)
[2020-10-13 05:33:23 +0000] [13] [INFO] Worker exiting (pid: 13)
[2020-10-13 05:33:23 +0000] [15] [INFO] Worker exiting (pid: 15)
[2020-10-13 05:33:23 +0000] [16] [INFO] Worker exiting (pid: 16)
[2020-10-13 05:33:25 +0000] [17] [INFO] Booting worker with pid: 17
[2020-10-13 05:33:26 +0000] [19] [INFO] Booting worker with pid: 19
[2020-10-13 05:33:26 +0000] [18] [INFO] Booting worker with pid: 18
[2020-10-13 05:33:26 +0000] [20] [INFO] Booting worker with pid: 20
==== END logs for container frontend of pod default/frontend-d998d8c49-sgvlf ====
==== START logs for container frontend of pod default/frontend-d998d8c49-nzvbp ====
[2020-10-12 15:16:40 +0000] [1] [INFO] Starting gunicorn 20.0.4
[2020-10-12 15:16:40 +0000] [1] [INFO] Listening at: http://0.0.0.0:8080 (1)
[2020-10-12 15:16:40 +0000] [1] [INFO] Using worker: sync
[2020-10-12 15:16:40 +0000] [10] [INFO] Booting worker with pid: 10
[2020-10-12 15:16:40 +0000] [9] [INFO] Booting worker with pid: 9
[2020-10-12 15:16:40 +0000] [11] [INFO] Booting worker with pid: 11
[2020-10-12 15:16:41 +0000] [12] [INFO] Booting worker with pid: 12
127.0.0.1 - - [12/Oct/2020:15:17:56 +0000] "GET / HTTP/1.1" 200 4645 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
[2020-10-12 15:18:26 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:10)
[2020-10-12 15:18:26 +0000] [10] [INFO] Worker exiting (pid: 10)
[2020-10-12 15:18:26 +0000] [13] [INFO] Booting worker with pid: 13
127.0.0.1 - - [12/Oct/2020:16:42:04 +0000] "GET / HTTP/1.1" 200 4645 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
[2020-10-12 16:42:34 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:9)
[2020-10-12 16:42:34 +0000] [9] [INFO] Worker exiting (pid: 9)
[2020-10-12 16:42:34 +0000] [14] [INFO] Booting worker with pid: 14
127.0.0.1 - - [12/Oct/2020:19:33:36 +0000] "GET / HTTP/1.1" 200 4645 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
[2020-10-12 19:34:07 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:13)
[2020-10-12 19:34:07 +0000] [13] [INFO] Worker exiting (pid: 13)
[2020-10-12 19:34:07 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:14)
[2020-10-12 19:34:07 +0000] [14] [INFO] Worker exiting (pid: 14)
[2020-10-12 19:34:07 +0000] [15] [INFO] Booting worker with pid: 15
[2020-10-12 19:34:07 +0000] [16] [INFO] Booting worker with pid: 16
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:11)
[2020-10-13 05:32:50 +0000] [11] [INFO] Worker exiting (pid: 11)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:12)
[2020-10-13 05:32:50 +0000] [12] [INFO] Worker exiting (pid: 12)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:15)
[2020-10-13 05:32:50 +0000] [15] [INFO] Worker exiting (pid: 15)
[2020-10-13 05:32:50 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:16)
[2020-10-13 05:32:50 +0000] [16] [INFO] Worker exiting (pid: 16)
[2020-10-13 05:32:52 +0000] [17] [INFO] Booting worker with pid: 17
[2020-10-13 05:32:52 +0000] [18] [INFO] Booting worker with pid: 18
[2020-10-13 05:32:52 +0000] [19] [INFO] Booting worker with pid: 19
[2020-10-13 05:33:02 +0000] [20] [INFO] Booting worker with pid: 20
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:17)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:18)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:19)
[2020-10-13 05:33:23 +0000] [1] [CRITICAL] WORKER TIMEOUT (pid:20)
[2020-10-13 05:33:23 +0000] [20] [INFO] Worker exiting (pid: 20)
[2020-10-13 05:33:23 +0000] [17] [INFO] Worker exiting (pid: 17)
[2020-10-13 05:33:23 +0000] [18] [INFO] Worker exiting (pid: 18)
[2020-10-13 05:33:23 +0000] [19] [INFO] Worker exiting (pid: 19)
[2020-10-13 05:33:25 +0000] [21] [INFO] Booting worker with pid: 21
[2020-10-13 05:33:26 +0000] [22] [INFO] Booting worker with pid: 22
[2020-10-13 05:33:26 +0000] [23] [INFO] Booting worker with pid: 23
[2020-10-13 05:33:26 +0000] [24] [INFO] Booting worker with pid: 24
127.0.0.1 - - [13/Oct/2020:07:24:18 +0000] "GET /api?timeout=32s HTTP/1.1" 404 232 "-" "kubectl/v1.19.0 (linux/amd64) kubernetes/e199641"
127.0.0.1 - - [13/Oct/2020:07:24:18 +0000] "GET /apis?timeout=32s HTTP/1.1" 404 232 "-" "kubectl/v1.19.0 (linux/amd64) kubernetes/e199641"
127.0.0.1 - - [13/Oct/2020:07:24:18 +0000] "GET /api?timeout=32s HTTP/1.1" 404 232 "-" "kubectl/v1.19.0 (linux/amd64) kubernetes/e199641"
127.0.0.1 - - [13/Oct/2020:07:24:18 +0000] "GET /apis?timeout=32s HTTP/1.1" 404 232 "-" "kubectl/v1.19.0 (linux/amd64) kubernetes/e199641"
==== END logs for container frontend of pod default/frontend-d998d8c49-nzvbp ====
==== START logs for container hello-python of pod default/hello-python-56566f55bc-8czdx ====
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
==== END logs for container hello-python of pod default/hello-python-56566f55bc-8czdx ====
==== START logs for container hello-python of pod default/hello-python-56566f55bc-6nk88 ====
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
==== END logs for container hello-python of pod default/hello-python-56566f55bc-6nk88 ====
==== START logs for container hello-python of pod default/hello-python-56566f55bc-h4x54 ====
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
==== END logs for container hello-python of pod default/hello-python-56566f55bc-h4x54 ====
==== START logs for container hello-python of pod default/hello-python-56566f55bc-r2gsr ====
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
==== END logs for container hello-python of pod default/hello-python-56566f55bc-r2gsr ====
==== START logs for container elastic-internal-init-filesystem of pod default/quickstart-es-default-0 ====
Starting init script
Linking /mnt/elastic-internal/xpack-file-realm/users to /usr/share/elasticsearch/config/users
Linking /mnt/elastic-internal/xpack-file-realm/roles.yml to /usr/share/elasticsearch/config/roles.yml
Linking /mnt/elastic-internal/xpack-file-realm/users_roles to /usr/share/elasticsearch/config/users_roles
Linking /mnt/elastic-internal/elasticsearch-config/elasticsearch.yml to /usr/share/elasticsearch/config/elasticsearch.yml
Linking /mnt/elastic-internal/unicast-hosts/unicast_hosts.txt to /usr/share/elasticsearch/config/unicast_hosts.txt
File linking duration: 0 sec.
Copying /usr/share/elasticsearch/config/* to /mnt/elastic-internal/elasticsearch-config-local/
removed '/mnt/elastic-internal/elasticsearch-config-local/elasticsearch.yml'
'/usr/share/elasticsearch/config/elasticsearch.yml' -> '/mnt/elastic-internal/elasticsearch-config-local/elasticsearch.yml'
removed '/mnt/elastic-internal/elasticsearch-config-local/http-certs/..data'
'/usr/share/elasticsearch/config/http-certs/..data' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/..data'
removed '/mnt/elastic-internal/elasticsearch-config-local/http-certs/ca.crt'
'/usr/share/elasticsearch/config/http-certs/ca.crt' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/ca.crt'
removed '/mnt/elastic-internal/elasticsearch-config-local/http-certs/tls.key'
'/usr/share/elasticsearch/config/http-certs/tls.key' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/tls.key'
removed '/mnt/elastic-internal/elasticsearch-config-local/http-certs/tls.crt'
'/usr/share/elasticsearch/config/http-certs/tls.crt' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/tls.crt'
'/usr/share/elasticsearch/config/http-certs/..2020_10_12_15_12_06.444289769' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/..2020_10_12_15_12_06.444289769'
'/usr/share/elasticsearch/config/http-certs/..2020_10_12_15_12_06.444289769/ca.crt' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/..2020_10_12_15_12_06.444289769/ca.crt'
'/usr/share/elasticsearch/config/http-certs/..2020_10_12_15_12_06.444289769/tls.key' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/..2020_10_12_15_12_06.444289769/tls.key'
'/usr/share/elasticsearch/config/http-certs/..2020_10_12_15_12_06.444289769/tls.crt' -> '/mnt/elastic-internal/elasticsearch-config-local/http-certs/..2020_10_12_15_12_06.444289769/tls.crt'
'/usr/share/elasticsearch/config/jvm.options' -> '/mnt/elastic-internal/elasticsearch-config-local/jvm.options'
'/usr/share/elasticsearch/config/log4j2.properties' -> '/mnt/elastic-internal/elasticsearch-config-local/log4j2.properties'
'/usr/share/elasticsearch/config/role_mapping.yml' -> '/mnt/elastic-internal/elasticsearch-config-local/role_mapping.yml'
removed '/mnt/elastic-internal/elasticsearch-config-local/roles.yml'
'/usr/share/elasticsearch/config/roles.yml' -> '/mnt/elastic-internal/elasticsearch-config-local/roles.yml'
removed '/mnt/elastic-internal/elasticsearch-config-local/transport-remote-certs/..data'
'/usr/share/elasticsearch/config/transport-remote-certs/..data' -> '/mnt/elastic-internal/elasticsearch-config-local/transport-remote-certs/..data'
removed '/mnt/elastic-internal/elasticsearch-config-local/transport-remote-certs/ca.crt'
'/usr/share/elasticsearch/config/transport-remote-certs/ca.crt' -> '/mnt/elastic-internal/elasticsearch-config-local/transport-remote-certs/ca.crt'
'/usr/share/elasticsearch/config/transport-remote-certs/..2020_10_12_15_12_07.280432887' -> '/mnt/elastic-internal/elasticsearch-config-local/transport-remote-certs/..2020_10_12_15_12_07.280432887'
'/usr/share/elasticsearch/config/transport-remote-certs/..2020_10_12_15_12_07.280432887/ca.crt' -> '/mnt/elastic-internal/elasticsearch-config-local/transport-remote-certs/..2020_10_12_15_12_07.280432887/ca.crt'
removed '/mnt/elastic-internal/elasticsearch-config-local/unicast_hosts.txt'
'/usr/share/elasticsearch/config/unicast_hosts.txt' -> '/mnt/elastic-internal/elasticsearch-config-local/unicast_hosts.txt'
removed '/mnt/elastic-internal/elasticsearch-config-local/users'
'/usr/share/elasticsearch/config/users' -> '/mnt/elastic-internal/elasticsearch-config-local/users'
removed '/mnt/elastic-internal/elasticsearch-config-local/users_roles'
'/usr/share/elasticsearch/config/users_roles' -> '/mnt/elastic-internal/elasticsearch-config-local/users_roles'
Empty dir /usr/share/elasticsearch/plugins
Copying /usr/share/elasticsearch/bin/* to /mnt/elastic-internal/elasticsearch-bin-local/
'/usr/share/elasticsearch/bin/elasticsearch' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch'
'/usr/share/elasticsearch/bin/elasticsearch-certgen' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-certgen'
'/usr/share/elasticsearch/bin/elasticsearch-certutil' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-certutil'
'/usr/share/elasticsearch/bin/elasticsearch-cli' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-cli'
'/usr/share/elasticsearch/bin/elasticsearch-croneval' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-croneval'
'/usr/share/elasticsearch/bin/elasticsearch-env' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-env'
'/usr/share/elasticsearch/bin/elasticsearch-env-from-file' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-env-from-file'
'/usr/share/elasticsearch/bin/elasticsearch-keystore' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-keystore'
'/usr/share/elasticsearch/bin/elasticsearch-migrate' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-migrate'
'/usr/share/elasticsearch/bin/elasticsearch-node' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-node'
'/usr/share/elasticsearch/bin/elasticsearch-plugin' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-plugin'
'/usr/share/elasticsearch/bin/elasticsearch-saml-metadata' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-saml-metadata'
'/usr/share/elasticsearch/bin/elasticsearch-setup-passwords' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-setup-passwords'
'/usr/share/elasticsearch/bin/elasticsearch-shard' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-shard'
'/usr/share/elasticsearch/bin/elasticsearch-sql-cli' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-sql-cli'
'/usr/share/elasticsearch/bin/elasticsearch-sql-cli-7.9.1.jar' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-sql-cli-7.9.1.jar'
'/usr/share/elasticsearch/bin/elasticsearch-syskeygen' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-syskeygen'
'/usr/share/elasticsearch/bin/elasticsearch-users' -> '/mnt/elastic-internal/elasticsearch-bin-local/elasticsearch-users'
'/usr/share/elasticsearch/bin/x-pack-env' -> '/mnt/elastic-internal/elasticsearch-bin-local/x-pack-env'
'/usr/share/elasticsearch/bin/x-pack-security-env' -> '/mnt/elastic-internal/elasticsearch-bin-local/x-pack-security-env'
'/usr/share/elasticsearch/bin/x-pack-watcher-env' -> '/mnt/elastic-internal/elasticsearch-bin-local/x-pack-watcher-env'
Files copy duration: 2 sec.
chowning /usr/share/elasticsearch/data to elasticsearch:elasticsearch
ownership of '/usr/share/elasticsearch/data' retained as elasticsearch:elasticsearch
chowning /usr/share/elasticsearch/logs to elasticsearch:elasticsearch
ownership of '/usr/share/elasticsearch/logs' retained as elasticsearch:elasticsearch
chown duration: 0 sec.
waiting for the transport certificates (/mnt/elastic-internal/transport-certificates/quickstart-es-default-0.tls.key)
wait duration: 0 sec.
Linking /usr/share/elasticsearch/config/transport-certs/quickstart-es-default-0.tls.crt to /mnt/elastic-internal/elasticsearch-config-local/node-transport-cert/transport.tls.crt
Linking /usr/share/elasticsearch/config/transport-certs/quickstart-es-default-0.tls.crt to /mnt/elastic-internal/elasticsearch-config-local/node-transport-cert/transport.tls.crt
Certs linking duration: 0 sec.
Init script successful
Script duration: 2 sec.
==== END logs for container elastic-internal-init-filesystem of pod default/quickstart-es-default-0 ====
==== START logs for container elasticsearch of pod default/quickstart-es-default-0 ====
{"timestamp": "2020-10-12T15:13:29+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:13:33+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:13:38+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:13:43+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:13:49+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:13:53+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:13:58+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:03+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:08+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:13+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:18+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:23+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:14:27,628Z", "level": "INFO", "component": "o.e.n.Node", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "version[7.9.1], pid[7], build[default/docker/083627f112ba94dffc1232e8b42b73492789ef91/2020-09-01T21:22:21.964974Z], OS[Linux/5.3.18-lp152.44-default/amd64], JVM[AdoptOpenJDK/OpenJDK 64-Bit Server VM/14.0.1/14.0.1+7]" }
{"type": "server", "timestamp": "2020-10-12T15:14:27,658Z", "level": "INFO", "component": "o.e.n.Node", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "JVM home [/usr/share/elasticsearch/jdk]" }
{"type": "server", "timestamp": "2020-10-12T15:14:27,660Z", "level": "INFO", "component": "o.e.n.Node", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "JVM arguments [-Xshare:auto, -Des.networkaddress.cache.ttl=60, -Des.networkaddress.cache.negative.ttl=10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -XX:+ShowCodeDetailsInExceptionMessages, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dio.netty.allocator.numDirectArenas=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.locale.providers=SPI,COMPAT, -Xms1g, -Xmx1g, -XX:+UseG1GC, -XX:G1ReservePercent=25, -XX:InitiatingHeapOccupancyPercent=30, -Djava.io.tmpdir=/tmp/elasticsearch-1685851787063784095, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m, -Des.cgroups.hierarchy.override=/, -XX:MaxDirectMemorySize=536870912, -Des.path.home=/usr/share/elasticsearch, -Des.path.conf=/usr/share/elasticsearch/config, -Des.distribution.flavor=default, -Des.distribution.type=docker, -Des.bundled_jdk=true]" }
{"timestamp": "2020-10-12T15:14:28+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:33+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:38+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:43+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:14:47,709Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [aggs-matrix-stats]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,711Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [analysis-common]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,712Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [constant-keyword]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,713Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [flattened]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,716Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [frozen-indices]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,718Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [ingest-common]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,718Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [ingest-geoip]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,719Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [ingest-user-agent]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,722Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [kibana]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,726Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [lang-expression]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,732Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [lang-mustache]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,734Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [lang-painless]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,736Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [mapper-extras]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,739Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [parent-join]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,748Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [percolator]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,749Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [rank-eval]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,750Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [reindex]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,753Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [repository-url]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,754Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [search-business-rules]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,755Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [searchable-snapshots]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,761Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [spatial]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,768Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [tasks]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,769Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [transform]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,771Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [transport-netty4]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,772Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [vectors]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,773Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [wildcard]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,774Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-analytics]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,774Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-async]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,777Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-async-search]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,778Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-autoscaling]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,779Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-ccr]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,779Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-core]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,780Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-data-streams]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,782Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-deprecation]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,783Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-enrich]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,787Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-eql]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,790Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-graph]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,790Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-identity-provider]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,793Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-ilm]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,793Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-logstash]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,794Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-ml]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,795Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-monitoring]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,797Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-ql]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,800Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-rollup]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,802Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-security]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,803Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-sql]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,804Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-stack]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,805Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-voting-only-node]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,808Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "loaded module [x-pack-watcher]" }
{"type": "server", "timestamp": "2020-10-12T15:14:47,810Z", "level": "INFO", "component": "o.e.p.PluginsService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "no plugins loaded" }
{"type": "deprecation", "timestamp": "2020-10-12T15:14:47,975Z", "level": "WARN", "component": "o.e.d.c.s.Settings", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "[node.data] setting was deprecated in Elasticsearch and will be removed in a future release! See the breaking changes documentation for the next major version." }
{"type": "server", "timestamp": "2020-10-12T15:14:48,222Z", "level": "INFO", "component": "o.e.e.NodeEnvironment", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "using [1] data paths, mounts [[/usr/share/elasticsearch/data (/dev/sda1)]], net usable_space [31.8gb], net total_space [41gb], types [ext4]" }
{"type": "server", "timestamp": "2020-10-12T15:14:48,232Z", "level": "INFO", "component": "o.e.e.NodeEnvironment", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "heap size [1gb], compressed ordinary object pointers [true]" }
{"type": "deprecation", "timestamp": "2020-10-12T15:14:48,238Z", "level": "WARN", "component": "o.e.d.c.s.Settings", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "[node.master] setting was deprecated in Elasticsearch and will be removed in a future release! See the breaking changes documentation for the next major version." }
{"timestamp": "2020-10-12T15:14:48+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:14:48,843Z", "level": "INFO", "component": "o.e.n.Node", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "node name [quickstart-es-default-0], node ID [4JH8lCjgTN-RIzeo2Ujt3g], cluster name [quickstart]" }
{"timestamp": "2020-10-12T15:14:57+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:14:58+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:15:04+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:15:09+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "deprecation", "timestamp": "2020-10-12T15:15:14,812Z", "level": "WARN", "component": "o.e.d.c.s.Settings", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "[node.ingest] setting was deprecated in Elasticsearch and will be removed in a future release! See the breaking changes documentation for the next major version." }
{"timestamp": "2020-10-12T15:15:16+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:15:19+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:15:23+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:15:28+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:15:30,568Z", "level": "INFO", "component": "o.e.x.m.p.l.CppLogMessageHandler", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "[controller/357] [Main.cc@114] controller (64 bit): Version 7.9.1 (Build 6ed2566ba11bb5) Copyright (c) 2020 Elasticsearch BV" }
{"timestamp": "2020-10-12T15:15:33+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:15:35,584Z", "level": "INFO", "component": "o.e.x.s.a.s.FileRolesStore", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "parsed [47] roles from file [/usr/share/elasticsearch/config/roles.yml]" }
{"timestamp": "2020-10-12T15:15:38+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"timestamp": "2020-10-12T15:15:43+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:15:44,757Z", "level": "INFO", "component": "o.e.d.DiscoveryModule", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "using discovery type [zen] and seed hosts providers [settings, file]" }
{"timestamp": "2020-10-12T15:15:48+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:15:50,727Z", "level": "WARN", "component": "o.e.g.DanglingIndicesState", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "gateway.auto_import_dangling_indices is disabled, dangling indices will not be automatically detected or imported and must be managed manually" }
{"timestamp": "2020-10-12T15:15:53+0000", "message": "readiness probe failed", "curl_rc": "7"}
{"type": "server", "timestamp": "2020-10-12T15:15:57,600Z", "level": "INFO", "component": "o.e.n.Node", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "initialized" }
{"type": "server", "timestamp": "2020-10-12T15:15:57,610Z", "level": "INFO", "component": "o.e.n.Node", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "starting ..." }
{"type": "server", "timestamp": "2020-10-12T15:15:58,883Z", "level": "INFO", "component": "o.e.t.TransportService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "publish_address {10.42.0.96:9300}, bound_addresses {[::]:9300}" }
{"type": "server", "timestamp": "2020-10-12T15:16:00,528Z", "level": "INFO", "component": "o.e.b.BootstrapChecks", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "bound or publishing to a non-loopback address, enforcing bootstrap checks" }
{"type": "server", "timestamp": "2020-10-12T15:16:00,538Z", "level": "INFO", "component": "o.e.c.c.Coordinator", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "cluster UUID [xtITEJ2vRvaH1m7-iIDd9Q]" }
{"type": "server", "timestamp": "2020-10-12T15:16:01,280Z", "level": "INFO", "component": "o.e.c.s.MasterService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "elected-as-master ([1] nodes joined)[{quickstart-es-default-0}{4JH8lCjgTN-RIzeo2Ujt3g}{qagIW6suQx68YGweL3ucGA}{10.42.0.96}{10.42.0.96:9300}{dilmrt}{ml.machine_memory=2147483648, xpack.installed=true, transform.node=true, ml.max_open_jobs=20} elect leader, _BECOME_MASTER_TASK_, _FINISH_ELECTION_], term: 4, version: 214, delta: master node changed {previous [], current [{quickstart-es-default-0}{4JH8lCjgTN-RIzeo2Ujt3g}{qagIW6suQx68YGweL3ucGA}{10.42.0.96}{10.42.0.96:9300}{dilmrt}{ml.machine_memory=2147483648, xpack.installed=true, transform.node=true, ml.max_open_jobs=20}]}" }
{"type": "server", "timestamp": "2020-10-12T15:16:01,740Z", "level": "INFO", "component": "o.e.c.s.ClusterApplierService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "master node changed {previous [], current [{quickstart-es-default-0}{4JH8lCjgTN-RIzeo2Ujt3g}{qagIW6suQx68YGweL3ucGA}{10.42.0.96}{10.42.0.96:9300}{dilmrt}{ml.machine_memory=2147483648, xpack.installed=true, transform.node=true, ml.max_open_jobs=20}]}, term: 4, version: 214, reason: Publication{term=4, version=214}" }
{"type": "server", "timestamp": "2020-10-12T15:16:02,274Z", "level": "INFO", "component": "o.e.h.AbstractHttpServerTransport", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "publish_address {10.42.0.96:9200}, bound_addresses {[::]:9200}", "cluster.uuid": "xtITEJ2vRvaH1m7-iIDd9Q", "node.id": "4JH8lCjgTN-RIzeo2Ujt3g"  }
{"type": "server", "timestamp": "2020-10-12T15:16:02,275Z", "level": "INFO", "component": "o.e.n.Node", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "started", "cluster.uuid": "xtITEJ2vRvaH1m7-iIDd9Q", "node.id": "4JH8lCjgTN-RIzeo2Ujt3g"  }
{"type": "server", "timestamp": "2020-10-12T15:16:04,169Z", "level": "WARN", "component": "o.e.t.TcpTransport", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "exception caught on transport layer [Netty4TcpChannel{localAddress=/[0:0:0:0:0:0:0:1]:9300, remoteAddress=/[0:0:0:0:0:0:0:1]:44546}], closing connection", "cluster.uuid": "xtITEJ2vRvaH1m7-iIDd9Q", "node.id": "4JH8lCjgTN-RIzeo2Ujt3g" , 
"stacktrace": ["io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: Insufficient buffer remaining for AEAD cipher fragment (2). Needs to be more than tag size (16)",
"at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:471) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.49.Final.jar:4.1.49.Final]",
"at java.lang.Thread.run(Thread.java:832) [?:?]",
"Caused by: javax.net.ssl.SSLHandshakeException: Insufficient buffer remaining for AEAD cipher fragment (2). Needs to be more than tag size (16)",
"at sun.security.ssl.Alert.createSSLException(Alert.java:131) ~[?:?]",
"at sun.security.ssl.TransportContext.fatal(TransportContext.java:325) ~[?:?]",
"at sun.security.ssl.TransportContext.fatal(TransportContext.java:268) ~[?:?]",
"at sun.security.ssl.TransportContext.fatal(TransportContext.java:263) ~[?:?]",
"at sun.security.ssl.SSLTransport.decode(SSLTransport.java:132) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.decode(SSLEngineImpl.java:729) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:684) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:499) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:475) ~[?:?]",
"at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:634) ~[?:?]",
"at io.netty.handler.ssl.SslHandler$SslEngineType$3.unwrap(SslHandler.java:282) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1267) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1314) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"... 16 more",
"Caused by: javax.crypto.BadPaddingException: Insufficient buffer remaining for AEAD cipher fragment (2). Needs to be more than tag size (16)",
"at sun.security.ssl.SSLCipher$T13GcmReadCipherGenerator$GcmReadCipher.decrypt(SSLCipher.java:1895) ~[?:?]",
"at sun.security.ssl.SSLEngineInputRecord.decodeInputRecord(SSLEngineInputRecord.java:240) ~[?:?]",
"at sun.security.ssl.SSLEngineInputRecord.decode(SSLEngineInputRecord.java:197) ~[?:?]",
"at sun.security.ssl.SSLEngineInputRecord.decode(SSLEngineInputRecord.java:160) ~[?:?]",
"at sun.security.ssl.SSLTransport.decode(SSLTransport.java:109) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.decode(SSLEngineImpl.java:729) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:684) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:499) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:475) ~[?:?]",
"at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:634) ~[?:?]",
"at io.netty.handler.ssl.SslHandler$SslEngineType$3.unwrap(SslHandler.java:282) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1267) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1314) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"... 16 more"] }
{"type": "server", "timestamp": "2020-10-12T15:16:04,266Z", "level": "WARN", "component": "o.e.t.TcpTransport", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "exception caught on transport layer [Netty4TcpChannel{localAddress=/127.0.0.1:9300, remoteAddress=/127.0.0.1:48862}], closing connection", "cluster.uuid": "xtITEJ2vRvaH1m7-iIDd9Q", "node.id": "4JH8lCjgTN-RIzeo2Ujt3g" , 
"stacktrace": ["io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: Insufficient buffer remaining for AEAD cipher fragment (2). Needs to be more than tag size (16)",
"at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:471) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.49.Final.jar:4.1.49.Final]",
"at java.lang.Thread.run(Thread.java:832) [?:?]",
"Caused by: javax.net.ssl.SSLHandshakeException: Insufficient buffer remaining for AEAD cipher fragment (2). Needs to be more than tag size (16)",
"at sun.security.ssl.Alert.createSSLException(Alert.java:131) ~[?:?]",
"at sun.security.ssl.TransportContext.fatal(TransportContext.java:325) ~[?:?]",
"at sun.security.ssl.TransportContext.fatal(TransportContext.java:268) ~[?:?]",
"at sun.security.ssl.TransportContext.fatal(TransportContext.java:263) ~[?:?]",
"at sun.security.ssl.SSLTransport.decode(SSLTransport.java:132) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.decode(SSLEngineImpl.java:729) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:684) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:499) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:475) ~[?:?]",
"at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:634) ~[?:?]",
"at io.netty.handler.ssl.SslHandler$SslEngineType$3.unwrap(SslHandler.java:282) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1267) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1314) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"... 16 more",
"Caused by: javax.crypto.BadPaddingException: Insufficient buffer remaining for AEAD cipher fragment (2). Needs to be more than tag size (16)",
"at sun.security.ssl.SSLCipher$T13GcmReadCipherGenerator$GcmReadCipher.decrypt(SSLCipher.java:1895) ~[?:?]",
"at sun.security.ssl.SSLEngineInputRecord.decodeInputRecord(SSLEngineInputRecord.java:240) ~[?:?]",
"at sun.security.ssl.SSLEngineInputRecord.decode(SSLEngineInputRecord.java:197) ~[?:?]",
"at sun.security.ssl.SSLEngineInputRecord.decode(SSLEngineInputRecord.java:160) ~[?:?]",
"at sun.security.ssl.SSLTransport.decode(SSLTransport.java:109) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.decode(SSLEngineImpl.java:729) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:684) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:499) ~[?:?]",
"at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:475) ~[?:?]",
"at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:634) ~[?:?]",
"at io.netty.handler.ssl.SslHandler$SslEngineType$3.unwrap(SslHandler.java:282) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1267) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1314) ~[netty-handler-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]",
"... 16 more"] }
{"type": "server", "timestamp": "2020-10-12T15:16:04,771Z", "level": "INFO", "component": "o.e.l.LicenseService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "license [0d9debad-cb02-4c91-8339-7e9ebba0402d] mode [basic] - valid", "cluster.uuid": "xtITEJ2vRvaH1m7-iIDd9Q", "node.id": "4JH8lCjgTN-RIzeo2Ujt3g"  }
{"type": "server", "timestamp": "2020-10-12T15:16:04,791Z", "level": "INFO", "component": "o.e.x.s.s.SecurityStatusChangeListener", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "Active license is now [BASIC]; Security is enabled", "cluster.uuid": "xtITEJ2vRvaH1m7-iIDd9Q", "node.id": "4JH8lCjgTN-RIzeo2Ujt3g"  }
{"type": "server", "timestamp": "2020-10-12T15:16:04,949Z", "level": "INFO", "component": "o.e.g.GatewayService", "cluster.name": "quickstart", "node.name": "quickstart-es-default-0", "message": "recovered [0] indices into cluster_state", "cluster.uuid": "xtITEJ2vRvaH1m7-iIDd9Q", "node.id": "4JH8lCjgTN-RIzeo2Ujt3g"  }
==== END logs for container elasticsearch of pod default/quickstart-es-default-0 ====
